@using KinaUna.Data
@using KinaUna.Data.Models
@using KinaUna.OpenIddict.Services
@model KinaUna.OpenIddict.Models.AccountViewModels.RegisterViewModel
@inject ILocaleManager LocaleManager
@{
    int languageId = LocaleManager.GetLanguageId(Context.Request);
    string pageTitle = await LocaleManager.GetTranslation("Register", PageNames.Account, languageId);
    KinaUnaText? termsText = await LocaleManager.GetPageTextByTitle("__RegisterTerms", "Register", languageId);
}
<div class="container">
    <div class="row">
        <div class="col-md-10">
            <h2>@pageTitle</h2>
            <form asp-controller="Account" asp-action="Register" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
                <a class="btn btn-info leavePage" style="float: right;" asp-action="Login" asp-route-returnUrl="@ViewData["ReturnUrl"]">&nbsp;@await LocaleManager.GetTranslation("Back to log in", PageNames.Account, languageId)&nbsp;</a>
                <h4>@await LocaleManager.GetTranslation("Create a new account", PageNames.Account, languageId)</h4>
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label>@await LocaleManager.GetTranslation("Email", PageNames.Account, languageId)</label>
                    <input asp-for="Email" class="form-control"/>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group col-sm-offset-6"></div>
                <div class="form-group">
                    <label>@await LocaleManager.GetTranslation("Password", PageNames.Account, languageId)</label>
                    <input asp-for="Password" class="form-control"/>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>@await LocaleManager.GetTranslation("Confirm password", PageNames.Account, languageId)</label>
                    <input asp-for="ConfirmPassword" class="form-control"/>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <br/>
                <div class="form-check">
                    <label class="form-check-label">
                        <input id="agreeCheck" name="agreeCheck" class="form-check-input form-control" type="checkbox" value="">
                        @await LocaleManager.GetTranslation("I agree to the terms listed below.", PageNames.Account, languageId)
                        <span class="form-check-sign">
                            <span class="check"></span>
                        </span>
                    </label>
                </div>
                <div class="form-group">
                    <input asp-for="LanguageId" value="@languageId" hidden="hidden" class="form-control"/>
                    <button id="registerBtn" type="submit" class="btn btn-success leavePage" disabled="disabled">&nbsp;@pageTitle&nbsp;</button>
                </div>
            </form>
        </div>
    </div>
</div>
@await LocaleManager.GetTranslation("Learn how we collect, process, and use data and cookies here:", PageNames.Account, languageId) <a asp-controller="Home" asp-action="Privacy">@await LocaleManager.GetTranslation("Privacy Policy", PageNames.Account, languageId)</a>.
<div class="card">
    <div class="card-body" style="background: lightyellow;">
        <div class="card-title">@await LocaleManager.GetTranslation("Terms and conditions", PageNames.Account, languageId)</div>
        <div class="card-text">
            @Html.Raw(@termsText?.Text ?? "")
        </div>
    </div>
</div>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
<script>
    $("#agreeCheck").on('change', function () {
        if (this.checked) {
            $('#registerBtn').attr('disabled', false);

        } else {
            $("#registerBtn").attr('disabled', true);
        }
    });
</script>