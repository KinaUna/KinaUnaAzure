// <auto-generated />
using System;
using KinaUna.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace KinaUnaWeb.Migrations
{
    [DbContext(typeof(WebDbContext))]
    [Migration("20181112103637_AddedLinkToWebNotification")]
    partial class AddedLinkToWebNotification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KinaUnaWeb.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("PostalCode");

                    b.Property<string>("State");

                    b.HasKey("AddressId");

                    b.ToTable("AddressDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.CalendarItem", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<bool>("AllDay");

                    b.Property<string>("Author");

                    b.Property<string>("Context");

                    b.Property<string>("EndString");

                    b.Property<DateTime?>("EndTime");

                    b.Property<string>("Location");

                    b.Property<string>("Notes");

                    b.Property<int>("ProgenyId");

                    b.Property<string>("StartString");

                    b.Property<DateTime?>("StartTime");

                    b.Property<string>("Title");

                    b.HasKey("EventId");

                    b.ToTable("CalendarDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<bool>("Active");

                    b.Property<int?>("AddressIdNumber");

                    b.Property<string>("Author");

                    b.Property<string>("Context");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email1");

                    b.Property<string>("Email2");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Notes");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PictureLink");

                    b.Property<int>("ProgenyId");

                    b.Property<string>("Tags");

                    b.Property<string>("Website");

                    b.HasKey("ContactId");

                    b.ToTable("ContactsDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Friend", b =>
                {
                    b.Property<int>("FriendId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Author");

                    b.Property<string>("Context");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FriendAddedDate");

                    b.Property<DateTime?>("FriendSince");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("PictureLink");

                    b.Property<int>("ProgenyId");

                    b.Property<string>("Tags");

                    b.Property<int>("Type");

                    b.HasKey("FriendId");

                    b.ToTable("FriendsDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Author");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<DateTime?>("Date");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<string>("District");

                    b.Property<string>("HouseNumber");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("PostalCode");

                    b.Property<int>("ProgenyId");

                    b.Property<string>("State");

                    b.Property<string>("StreetName");

                    b.Property<string>("Tags");

                    b.HasKey("LocationId");

                    b.ToTable("LocationsDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Author");

                    b.Property<double>("Circumference");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("Date");

                    b.Property<string>("EyeColor");

                    b.Property<string>("HairColor");

                    b.Property<double>("Height");

                    b.Property<int>("ProgenyId");

                    b.Property<double>("Weight");

                    b.HasKey("MeasurementId");

                    b.ToTable("MeasurementsDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Category");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Owner");

                    b.Property<int>("ProgenyId");

                    b.Property<string>("Title");

                    b.HasKey("NoteId");

                    b.ToTable("NotesDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Author");

                    b.Property<string>("Category");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("ProgenyId");

                    b.Property<DateTime>("SkillAddedDate");

                    b.Property<DateTime?>("SkillFirstObservation");

                    b.HasKey("SkillId");

                    b.ToTable("SkillsDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Sleep", b =>
                {
                    b.Property<int>("SleepId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Author");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ProgenyId");

                    b.Property<DateTime>("SleepEnd");

                    b.Property<string>("SleepNotes");

                    b.Property<int>("SleepRating");

                    b.Property<DateTime>("SleepStart");

                    b.HasKey("SleepId");

                    b.ToTable("SleepDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.TimeLineItem", b =>
                {
                    b.Property<int>("TimeLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("ItemId");

                    b.Property<int>("ItemType");

                    b.Property<int>("ProgenyId");

                    b.Property<DateTime>("ProgenyTime");

                    b.HasKey("TimeLineId");

                    b.ToTable("TimeLineDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.Vaccination", b =>
                {
                    b.Property<int>("VaccinationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Author");

                    b.Property<string>("Notes");

                    b.Property<int>("ProgenyId");

                    b.Property<DateTime>("VaccinationDate");

                    b.Property<string>("VaccinationDescription");

                    b.Property<string>("VaccinationName");

                    b.HasKey("VaccinationId");

                    b.ToTable("VaccinationsDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.VocabularyItem", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessLevel");

                    b.Property<string>("Author");

                    b.Property<DateTime?>("Date");

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<string>("Language");

                    b.Property<int>("ProgenyId");

                    b.Property<string>("SoundsLike");

                    b.Property<string>("Word");

                    b.HasKey("WordId");

                    b.ToTable("VocabularyDb");
                });

            modelBuilder.Entity("KinaUnaWeb.Models.WebNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("From");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsRead");

                    b.Property<string>("Link");

                    b.Property<string>("Message");

                    b.Property<string>("Title");

                    b.Property<string>("To");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("WebNotificationsDb");
                });
#pragma warning restore 612, 618
        }
    }
}
