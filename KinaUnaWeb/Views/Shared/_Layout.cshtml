@inject Microsoft.ApplicationInsights.AspNetCore.JavaScriptSnippet JavaScriptSnippet
<!DOCTYPE html>
@using KinaUna.Data
@using KinaUna.Data.Extensions
@using KinaUnaWeb.Models.HomeViewModels
@using Microsoft.AspNetCore.Http.Extensions
@using KinaUnaWeb.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Syncfusion.EJ2
@{
    KinaUnaLanguage kinaUnaLanguage = Context.Request.GetKinaUnaLanguage();
    int languageId = kinaUnaLanguage.Id;
    string languageCode = kinaUnaLanguage.Code;
}
<html lang="@languageCode">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="color-scheme" content="light dark">
    <title>@ViewData["Title"] : Kina Una Web</title>
    <link rel="stylesheet" href="~/css/bootstrap.min.css" asp-append-version="true">
    <link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/bootstrap5.css"/>
    <link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/bootstrap5-dark.css" media="(prefers-color-scheme: dark)">
    <link href="~/lib/fa5_2_0/css/all.min.css" rel="stylesheet" />
    <link href="~/css/waitMe.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.2/css/bootstrap-select.min.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>
    <script src="~/lib/popper.min.js"></script>
    <script src="~/js/lazysizes.min.js"></script>
    <script src="~/js/bootstrap.min.js" asp-append-version="true"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.2/js/bootstrap-select.min.js"></script>
   <script src="~/js/waitMe.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <meta name="theme-color" content="#3a2051" />
    <link rel="manifest" href="~/manifest.json">
    <script>
        if (navigator.serviceWorker.controller) {
            // console.log('[PWA Builder] active service worker found, no need to register');
        } else {
            navigator.serviceWorker.register('/pwabuilder-sw.js',
                {
                    scope: '/'
                }).then(function (reg) {
                // console.log('Service worker has been registered for scope:' + reg.scope);
            });
        }
    </script>
    @Html.Raw(JavaScriptSnippet.FullScript)
</head>
@inject ILocaleManager LocaleManager;
@{ string returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : Context.Request.GetEncodedUrl(); }
@inject IProgenyManager ChildManager
@{
    List<Progeny> childList = new List<Progeny>();
    Progeny child = new Progeny();
    UserInfo userInfo = new UserInfo();
    bool showUndelete = false;
}

@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    string userId = User.GetUserId();
    userInfo = await ChildManager.GetInfo(User.GetEmail());
    bool isAccountDeleted = userInfo.Deleted && userInfo.DeletedTime < DateTime.UtcNow - TimeSpan.FromDays(30);
    if (!isAccountDeleted && await ChildManager.IsUserLoginValid(userId))
    {
        if (userInfo.UserId == "401")
        {
            Context.Response.Redirect("/Account/CheckOut?returnUrl=" + returnUrl);
        }
        else
        {
            if (userInfo.ViewChild == 0)
            {
                Context.Response.Redirect("/");
            }
            childList = userInfo.ProgenyList;
            child = userInfo.ProgenyList.SingleOrDefault(p => p.Id == userInfo.ViewChild);
        }
    }
    else
    {
        bool isApplicationUserValid = await ChildManager.IsApplicationUserValid(userId);

        if (isApplicationUserValid && userInfo.Deleted && userInfo.DeletedTime > DateTime.UtcNow - TimeSpan.FromDays(30))
        {

            showUndelete = true;
        }
        else
        {
            Context.Response.Redirect("/Account/SignIn?returnUrl=" + returnUrl);
        }
    }
}
<body>
@{
        UserMenuViewModel userMenuViewModel = new UserMenuViewModel { LanguageId = languageId, UserInfo = userInfo };
}
    @await Html.PartialAsync("_SideMenuPartial", userMenuViewModel)
<div id="topLanguageDiv" class="kinauna_purple_bg">
    <div class="container">
        <div class="row">
            <div class="col ml-3 mt-0 mb-1 w-100">
                @await Html.PartialAsync("_LanguagePartial", await LocaleManager.GetLanguageModel(languageId))
            </div>
        </div>
    </div>
</div>
<nav class="navbar navbar-expand-lg navbar-dark bg-primary sticky-top" id="navMain">
    <div id="topMainMenuContainer" class="container">

        @if (User.Identity != null && User.Identity.IsAuthenticated)
        {
            <a asp-area="" asp-controller="Home" asp-action="Index" asp-route-childId="@userInfo.ViewChild" class="navbar-brand leavePage" aria-label="Home" style="margin-right: 80px;">
                <img src="/images/Square44x44Logo.scale-100.png" class="kinauna-logo"/>
            </a>
            @if (userInfo.CanUserAddItems)
            {
                <div class="navbar-nav nav-item ml-3 ml-lg-1">
                    <a class="nav-link kinauna_yellow_text leavePage" style="margin-right: 12px;" asp-area="" asp-controller="AddItem" asp-action="Index" aria-label="Add item">
                        <i class="material-icons icon_medium kinauna_yellow_text" aria-hidden="true">add</i>
                    </a>
                </div>
            }
        }
        else
        {
            <a asp-area="" asp-controller="Home" asp-action="Index" class="navbar-brand leavePage" aria-label="Home" style="margin-right: 80px;">
                <img src="/images/Square44x44Logo.scale-100_bw.png" class="kinauna-logo"/>
            </a>
        }
        @{
            string childprofilePic = "<i class=\"material-icons d-none\" style=\"color: #8bda8b;\">child_care</i>";
            if (child != null)
            {

                if (!string.IsNullOrWhiteSpace(child.PictureLink))
                {
                    string picLink = ChildManager.GetImageUrl(child.PictureLink, "progeny");
                    childprofilePic = "<img src=\"" + picLink + "\" style=\"max-height: 48px; margin-right: 0px; background: #8bda8b; border-radius: 12px; padding: 1px; width: 48px;\" /img> ";
                }
                <span class="d-lg-none selectedChildProfilePic">@Html.Raw(childprofilePic)</span>
            }
        }
        <span id="togglerNotificationsCounter" class="badge badge-danger ml-auto mr-2 d-block d-lg-none" style="position: relative; display: none; font-size: 12px;">0</span>
        <button id="navMainMenuButton" class="navbar-toggler d-block d-lg-none" style="height: 52px; border-color: transparent; outline: none" type="button" data-toggle="collapse" data-target="#navbarMainContent" aria-controls="navbarMainContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon kinauna_yellow_text"></span>
        </button>
        <div class="collapse navbar-collapse mt-5 mt-lg-1" id="navbarMainContent" style="min-height: 52px;">
            <ul class="navbar-nav ml-1 ml-lg-2 w-100 top-menu-max-height">
                @if (childList.Count > 1 && child != null)
                {
                    <li class="nav-item dropdown mb-2 mb-lg-0 mr-auto mr-lg-2">
                        <a id="selectChildMenuButton" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                            <span style="max-height: 40px;">@Html.Raw(childprofilePic)</span><span> @child.NickName </span>
                        </a>
                        <div id="selectChildDropDownMenu" class="dropdown-menu">
                            @foreach (Progeny prog in childList)
                            {
                                if (prog.Id != child.Id)
                                {
                                    <div class="dropdown-item">
                                        <form class="form-inline-fullwidth" asp-area="" asp-controller="Home" asp-action="SetViewChild" asp-route-childId="@prog.Id" asp-route-returnUrl="@returnUrl" method="post">
                                            <button type="submit" class="btn btn-link btn-block text-white text-left leavePage">
                                                @{
                                                    string profilePic2 = "<i class=\"material-icons\" style=\"color: #8bda8b;\">child_care</i>";
                                                    if (!string.IsNullOrWhiteSpace(prog.PictureLink))
                                                    {
                                                        string picLink2 = ChildManager.GetImageUrl(prog.PictureLink, "progeny");
                                                        profilePic2 = "<img src=\"" + picLink2 + "\" style=\"max-height: 36px; margin-top: -4px; margin-right: 4px; background: black; border-radius: 10px; padding: 1px; width: 40px;\" /img> ";
                                                    }
                                                }
                                                @Html.Raw(profilePic2) @prog.NickName
                                            </button>
                                        </form>
                                    </div>
                                }
                            }
                        </div>
                    </li>
                }
                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    @await Html.PartialAsync("_NotificationsMenuPartial", languageId)
                    @await Html.PartialAsync("_AccountMenuPartial", userMenuViewModel)
                }
                else
                {
                    <li class="nav-item ml-lg-auto">
                        <form id="loginForm" class="form-inline-fullwidth" asp-controller="Account" asp-action="Login" method="post">
                            <button id="loginButton" type="submit" class="btn btn-link nav-link text-left btn-block"><i class="material-icons ml-2 mr-1">exit_to_app</i> @await LocaleManager.GetTranslation("Log in or register", PageNames.Layout, languageId)</button>
                        </form>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>
<div id="body-content" class="main-container body-content">
        
    <div id="kinaunaMainDiv" class="main kinauna-main" style="margin-top: 10px; padding-top: 10px;">
        @if (showUndelete)
        {
            @await Html.PartialAsync("_UndeleteAccountPartial", languageId)
        }
        @RenderBody()
    </div>
    <div class="space-20"></div>
    @await Html.PartialAsync("_FooterPartial", languageId)
</div>
@if (!Context.Request.ConsentCookieSet())
{
    <div class="container" style="position: sticky; bottom: 0; overflow-y: auto; max-height: 90vh;">
        <div class="row">
            <div class="ml-auto col-12 col-md-7 col-lg-5 col-xl-4 col-xxl-3 col-w1900-3 col-w2500-2">
                @await Html.PartialAsync("_CookieConsentPartial", languageId)
            </div>
        </div>
    </div>
}
<script src="~/js/app.js" asp-append-version="true"></script>
@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    <script src="~/signalr/signalr.min.js"></script>
    <script src="~/signalr/msgpack5.min.js"></script>
    <script src="~/signalr/signalr-protocol-msgpack.min.js"></script>
    <script src="~/signalr/KinaUnaWebNotifications.js" asp-append-version="true"></script>
}

<ejs-scripts></ejs-scripts>
</body>
</html>