@model Friend
@{
    List<string> typeList = new List<string>();
    typeList.Add("Personal Friend");
    typeList.Add("Toy/Animal Friend");
    typeList.Add("Parent");
    typeList.Add("Family");
    typeList.Add("Caretaker");
}
<a class="leavePage" asp-controller="Friends" asp-action="FriendDetails" asp-route-friendId="@Model.FriendId">
    <div class="card bg-primary" style="margin-top: 0; margin-bottom: 8px;">
        <div class="card-body" style="background: rgba(110, 110, 110, 0.5)">
            <div class="info-title">
                <span style="font-size: 18px; color: white; margin-right: 12px;" class="fas fa-users"></span><strong style="font-size: 12px;" class="text-warning">@Model.FriendSince.Value.ToString("dd-MMM-yyyy HH:mm")</strong>
            </div>
            <div style="margin-left: 2px; font-size: 12px;" class="text-white">@Model.Name</div>
            <div style="margin-left: 2px; margin-top: 8px; max-width: 60vw; overflow: hidden; font-size: 12px;">
                <img class="img-thumbnail" style="max-height: 240px; max-width: 224px; background: black; margin-bottom: 8px;" src="@Model.PictureLink"/>
                <br/>
                Type: @typeList[Model.Type]<br/>
                Context: @Model.Context<br/>
                Notes: @Model.Notes
            </div>
            <div style="margin-left: 2px;">
                @{
                    if (!string.IsNullOrEmpty(Model.Tags))
                    {
                        List<string> tagsList = Model.Tags.Split(',').ToList();
                        foreach (string tagString in tagsList)
                        {
                            <span asp-controller="Friends" asp-action="Index" asp-route-tagFilter="@tagString" class="badge badge-pill badge-rose leavePage2">@tagString</span>
                        }
                    }
                }
            </div>
        </div>
    </div>
</a>