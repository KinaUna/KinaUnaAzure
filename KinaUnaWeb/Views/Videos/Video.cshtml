@using System.Globalization
@using KinaUna.Data
@using KinaUna.Data.Extensions
@using KinaUnaWeb.Services
@model KinaUnaWeb.Models.ItemViewModels.VideoItemViewModel
@inject ILocaleManager LocaleManager
@{
    ViewData["Title"] = Model.CurrentProgeny.NickName + " - " + await LocaleManager.GetTranslation("Video", PageNames.Videos, Model.LanguageId);
    string videosString = await LocaleManager.GetTranslation("videos", PageNames.Videos, Model.LanguageId);
    string viewPrevText = "Older";
    string viewNextText = "Newer";
    if (Model.SortBy == 1)
    {
        viewPrevText = "Newer";
        viewNextText = "Older";
    }
    bool allowHereMaps = Context.Request.HereMapsCookieSet();
    bool allowYouTube = Context.Request.YouTubeCookieSet();
    string timeSeparator = CultureInfo.CurrentUICulture.DateTimeFormat.TimeSeparator;
    string longDateTimeFormat = "dd-MMMM-yyyy HH" + timeSeparator + "mm";
    string zebraDateTimeFormat = "d-F-Y H" + timeSeparator + "i";
}
@section Scripts{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/zebra_datepicker/dist/css/bootstrap/zebra_datepicker.min.css">
    <link href="/css/amsify.suggestags.css" rel="stylesheet" asp-append-version="true"/>
    <script src="/lib/jquery.amsify.suggestags.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/da.min.js" integrity="sha512-rybyYvSnwg3zAZ/vjTTMoh8tOK0Z6tC2XCzr9e27M0xr8WU40IGo6SOP7FXXCyWgMyd3wZ8ln2nY4ce1ysYUfw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/de.min.js" integrity="sha512-c0OHGm6x2JXZyrb7Kb+Jcoy7eQ4F+AqzYLeciicpzuvgyeTWRQEZ6QthFYRUBOR0rShmm54O/7pHZJ/nqhbrkw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/de-at.min.js" integrity="sha512-2zI8NFjVrQ4nMIS3HCBVOgiUb6qRiKKa/U4K/DL5aT/sz9dSuHFMZdZIPRjGBQoKZbpyP3NI8diNGK+RlUTTsg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/de-ch.min.js" integrity="sha512-7VvKBnFgucrOLF0GLzWUuhtDcRKYUuOy9O5AqiqvccZFp4zAqAzkMqIlNVCDR3DJ6OZ6dsdn+MLiJ8vZx84WhQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="/lib/material-kit/plugins/jasny-bootstrap.min.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/zebra_datepicker/dist/zebra_datepicker.min.js"></script>
    @if (allowHereMaps)
    {
        <script src="https://js.api.here.com/v3/3.1/mapsjs-core.js" type="text/javascript" charset="utf-8"></script>
        <script src="https://js.api.here.com/v3/3.1/mapsjs-service.js" type="text/javascript" charset="utf-8"></script>
        <script src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js" type="text/javascript" charset="utf-8"></script>
        <script src="https://js.api.here.com/v3/3.1/mapsjs-ui.js" type="text/javascript" charset="utf-8"></script>
        <link rel="stylesheet" type="text/css" href="https://js.api.here.com/v3/3.1/mapsjs-ui.css"/>
    }
}

<div id="currentMomentLocaleDiv" class="d-none" data-current-locale="@Model.LanguageIdString"></div>
<div id="languageIdDiv" class="d-none" data-current-locale="@Model.LanguageId"></div>
<div id="zebraDateTimeFormatDiv" class="d-none" data-zebra-date-time-format="@zebraDateTimeFormat"></div>
<div id="progenyIdDiv" class="d-none" data-progeny-id="@Model.CurrentProgenyId"></div>
<div class="ml-xl-auto mr-xl-auto col-xxl-11 col-xxxl-10">
    <h2>@ViewData["Title"] - @Model.Video.VideoNumber @await LocaleManager.GetTranslation("of", PageNames.Videos, Model.LanguageId) @Model.VideoCount</h2>
    <div id="photoDiv">
        @if (!string.IsNullOrEmpty(Model.TagFilter))
        {
            <div>@await LocaleManager.GetTranslation("Tag filter:", PageNames.Videos, Model.LanguageId) @Model.TagFilter</div>
        }
        <div style="max-width: 100%; padding-top: 10px; padding-bottom: 20px;">
            <div style="float: left">
                <a id="previousPhotoLink" class="leavePage" asp-controller="Videos" asp-action="Video" asp-route-id="@Model.PrevVideo" asp-route-childId="@Model.CurrentProgeny.Id" asp-route-sortBy="@Model.SortBy"
                   asp-route-tagFilter="@Model.TagFilter"><i class="fa fa-arrow-left" aria-hidden="true"></i> @viewPrevText @videosString</a>
            </div>

            <div style="float: right">
                <a id="nextPhotoLink" class="leavePage" asp-controller="Videos" asp-action="Video" asp-route-id="@Model.NextVideo" asp-route-childId="@Model.CurrentProgeny.Id" asp-route-sortBy="@Model.SortBy"
                   asp-route-tagFilter="@Model.TagFilter">@viewNextText @videosString <i class="fa fa-arrow-right" aria-hidden="true"></i></a>
            </div>
        </div>
        <div class="space-20"></div>
        <div align="center" style="max-width: 100%">
            @if (allowYouTube)
            {
                if (Model.Video.VideoType == 1)
                {
                    <iframe src="@Model.Video.VideoLink" style="width: 90%; height: 80vh; border: none;" scrolling="no" allowfullscreen></iframe>
                }
                if(Model.Video.VideoType == 2)
                {
                    <iframe src="@Model.Video.VideoLink?rel=0" style="width: 90%; height: 80vh; border: none;" allow="encrypted-media" allowfullscreen></iframe>

                }
            }
        </div>
        <div>
            @{
                if (!string.IsNullOrEmpty(Model.Tags))
                {
                    List<string> tagsList = Model.Tags.Split(',').ToList();
                    foreach (string tagString in tagsList)
                    {
                        <a asp-action="Index" asp-route-id="1" asp-route-childId="@Model.CurrentProgeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@tagString" class="btn tag-item leavePage">@tagString</a>
                    }
                }
            }
        </div>
        @if (!allowYouTube || !allowHereMaps)
        {
            <div class="col-12 col-md-10 col-lg-9 col-xl-8 col-xxl-7 col-w1900-6 col-w2500-5">
                <div class="space-20"></div>
                <div>@await LocaleManager.GetTranslation("Cookie consent for Here maps or YouTube has not been granted. To use maps enable cookies for Here Maps. To allow YouTube content enable cookies for YouTube.", PageNames.Locations, Model.LanguageId)</div>
                <div class="space-20"></div>
                @if (Context.Request.ConsentCookieSet())
                {
                    @await Html.PartialAsync("_CookieConsentPartial", Model.LanguageId)
                }
            </div>
        }
        <div class="space-20"></div>
        @if (Model.VidTimeValid)
        {
            string wasString = await LocaleManager.GetTranslation("was", PageNames.Videos, Model.LanguageId);
            string daysOldString = await LocaleManager.GetTranslation("days old.", PageNames.Videos, Model.LanguageId);
            <div style="font-size: 16px; line-height: 90%;">
                <p>@await LocaleManager.GetTranslation("Video recorded:", PageNames.Videos, Model.LanguageId) @Model.VidTime</p>
                <p>@Model.CurrentProgeny.NickName @wasString @Model.VidYears @await LocaleManager.GetTranslation("years old.", PageNames.Videos, Model.LanguageId)</p>
                <p>@Model.CurrentProgeny.NickName @wasString @Model.VidMonths @await LocaleManager.GetTranslation("months old.", PageNames.Videos, Model.LanguageId)</p>
                <p>@Model.CurrentProgeny.NickName @wasString @Model.VidWeeks[0] @await LocaleManager.GetTranslation("weeks and", PageNames.Videos, Model.LanguageId) @Model.VidWeeks[1] @daysOldString</p>
                <p>@Model.CurrentProgeny.NickName @wasString @Model.VidDays @daysOldString</p>
                <p>@Model.CurrentProgeny.NickName @wasString @Model.VidHours @await LocaleManager.GetTranslation("hours old.", PageNames.Videos, Model.LanguageId)</p>
                <p>@Model.CurrentProgeny.NickName @wasString @Model.VidMinutes @await LocaleManager.GetTranslation("minutes old.", PageNames.Videos, Model.LanguageId)</p>
            </div>
            <div class="space-20"></div>
        }
    </div>
    @if (User.Identity != null && User.Identity.IsAuthenticated && !string.IsNullOrEmpty(Model.Video.Longtitude))
    {
        <div style="font-size: 16px; line-height: 90%;">
            <p>@await LocaleManager.GetTranslation("Location:", PageNames.Videos, Model.LanguageId) @Model.Video.Location</p>

            @if (!string.IsNullOrEmpty(Model.Video.Latitude))
            {
                <p>@await LocaleManager.GetTranslation("Latitude:", PageNames.Videos, Model.LanguageId) @Model.Video.Latitude @await LocaleManager.GetTranslation("Longitude:", PageNames.Videos, Model.LanguageId) @Model.Video.Longtitude @await LocaleManager.GetTranslation("Altitude:", PageNames.Videos, Model.LanguageId): @Model.Video.Altitude</p>
                @if (allowHereMaps)
                {
                    <div style="width: 100%; height: 300px" id="mapContainer"></div>
                    <script>
                        let pixelRatio = window.devicePixelRatio || 1;
                        let defaultIcon = new H.map.Icon("/images/purplemarker.svg", { size: { w: 36, h: 36 } });
                        let platform = new H.service.Platform({
                            'apikey': '@Model.HereMapsApiKey',
                            'useHTTPS': true
                        });

                        let maptypes = platform.createDefaultLayers({
                            tileSize: pixelRatio === 1 ? 256 : 512,
                            ppi: pixelRatio === 1 ? undefined : 320
                        });

                        let map = new H.Map(document.getElementById('mapContainer'),
                            maptypes.vector.normal.map,
                            {
                                zoom: 14,
                                center: { lng: @Model.Video.Longtitude, lat: @Model.Video.Latitude },
                                pixelRatio: pixelRatio
                            });

                        let ui = H.ui.UI.createDefault(map, maptypes);
                        let behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

                        let marker = new H.map.Marker({ lat: @Model.Video.Latitude.ToString(new CultureInfo("en-US")).Replace(',', '.'), lng: @Model.Video.Longtitude.ToString(new CultureInfo("en-US")).Replace(',', '.')}, { icon: defaultIcon });
                        map.addObject(marker);

                        let reverseGeocodingParameters = {
                            prox: '@Model.Video.Latitude,  @Model.Video.Longtitude, 32',
                            mode: 'retrieveAddresses',
                            maxresults: 1
                        };

                        function onGeoSuccess(result) {
                            let location = result.Response.View[0].Result[0];
                            let contextText = "";
                            let streetName = "";
                            let districtName = "";
                            let cityName = "";
                            let countyName = "";
                            let stateName = "";
                            if (location.Location.Address.Street !== undefined) {
                                streetName = location.Location.Address.Street;
                                contextText = contextText + location.Location.Address.Street;
                            }
                            if (location.Location.Address.District !== undefined) {
                                districtName = location.Location.Address.District;
                                if (districtName !== streetName) {
                                    contextText = contextText + " " + location.Location.Address.District;
                                }
                            }
                            if (location.Location.Address.City !== undefined) {
                                cityName = location.Location.Address.City;
                                if (cityName !== districtName && districtName.indexOf(cityName) < 0) {
                                    contextText = contextText + ", " + location.Location.Address.City;
                                }
                            }
                            if (location.Location.Address.County !== undefined) {
                                countyName = location.Location.Address.County;
                                if (countyName !== cityName && cityName.indexOf(countyName) < 0 && countyName.indexOf(cityName) < 0) {
                                    contextText = contextText + ", " + location.Location.Address.County;
                                }
                            }
                            if (location.Location.Address.State !== undefined) {
                                stateName = location.Location.Address.State;
                                if (stateName !== cityName && stateName !== countyName) {
                                    contextText = contextText + ", " + location.Location.Address.State;
                                }
                            }
                            if (location.Location.Address.AdditionalData[0].value !== undefined) {
                                contextText = contextText + ", " + location.Location.Address.AdditionalData[0].value;
                            }
                            contextText = contextText.replace(/(^,)|(,$)/g, "").trim();
                            ui.addBubble(new H.ui.InfoBubble({
                                lat: location.Location.DisplayPosition.Latitude,
                                lng: location.Location.DisplayPosition.Longitude
                            }, { content: contextText }));
                        };
                        let geocoder = platform.getGeocodingService();
                        geocoder.reverseGeocode(
                            reverseGeocodingParameters,
                            onGeoSuccess,
                            function (e) { console.log('Error in Reverse Geocode: ' + e); });

                    </script>
                }
            }
        </div>
        <div class="space-20"></div>
    }
    @if (Model.CommentsList.Count > 0)
    {
        <div>
            <div>
                <h5>@await LocaleManager.GetTranslation("Comments", PageNames.Videos, Model.LanguageId) (@Model.CommentsCount):</h5>
            </div>
            <div class="col-md-10">
                <div class="media-area">
                    @foreach (Comment cmnt in Model.CommentsList)
                    {
                        <div class="card bg-light text-dark">
                            <div class="card-body">
                                <div class="float-left" style="margin-left: -15px; margin-right: 5px;">
                                    <div class="img-circle" style="height: 46px; width: 46px;">
                                        <img height="40" width="40" class="media-object rounded img-fluid" src="@cmnt.AuthorImage" />
                                    </div>
                                </div>
                                <h6 class="text-muted" style="margin-top: 0; padding-top: 0;">
                                    @cmnt.DisplayName <small> · @cmnt.Created.ToString("dd-MMM-yyyy HH:mm")</small>
                                </h6>
                                <p>
                                    @cmnt.CommentText
                                </p>
                                <div class="space-20"></div>
                                @if (cmnt.Author == Model.CurrentUser.UserId)
                                {
                                    <div class="media-footer">
                                        <form class="form-inline float-right" asp-controller="Videos" asp-action="DeleteVideoComment" role="form" method="post">
                                            <div class="form-group">
                                                <div>
                                                    <button class="btn btn-danger btn-sm leavePage" type="submit">@await LocaleManager.GetTranslation("Delete comment", PageNames.Videos, Model.LanguageId)</button>
                                                </div>
                                            </div>
                                            <input Name="CommentThreadNumber" class="form-control" value="@Model.CommentThreadNumber" type="hidden" />
                                            <input Name="CommentId" class="form-control" value="@cmnt.CommentId" type="hidden" />
                                            <input Name="VideoId" class="form-control" value="@Model.Video.VideoId" type="hidden" />
                                            <input Name="ProgenyId" class="form-control" value="@Model.CurrentProgenyId" type="hidden" />
                                        </form>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <form asp-controller="Videos" asp-action="AddVideoComment" role="form" method="post">
            <div class="form-group">
                <label Name="CommentText" class="col-lg-3 col-sm-3 control-label">@await LocaleManager.GetTranslation("New comments:", PageNames.Videos, Model.LanguageId)</label>
                <div class="col-md-10">
                    <textarea Name="CommentText" class="form-control" rows="4"></textarea>
                </div>
                <div class="col-md-10">
                    <button class="btn btn-success float-right leavePage" style="margin-right: 15px;" type="submit">@await LocaleManager.GetTranslation("Add comment", PageNames.Videos, Model.LanguageId)</button>
                </div>
            </div>
            <input asp-for="CommentThreadNumber" class="form-control" value="@Model.CommentThreadNumber!" type="hidden" />
            <input asp-for="SortBy" class="form-control" value="@Model.SortBy!" type="hidden" />
            <input name="ItemId" class="form-control" value="@Model.Video.VideoId!" type="hidden" />
            <input asp-for="CurrentProgenyId" class="form-control" value="@Model.CurrentProgenyId!" type="hidden" />
        </form>
    }
<div class="space-20"></div>
@if (Model.IsCurrentUserProgenyAdmin)
    {
        <div class="col-sm-3" style="margin-top: 35px;"></div>
        <div class="col-md-8">
            <button id="toggleEditBtn" class="btn btn-info">@await LocaleManager.GetTranslation("Edit video", PageNames.Videos, Model.LanguageId)</button>
        </div>
        <div id="editSection" style="display: none; padding: 15px;">
            <div>@await LocaleManager.GetTranslation("Edit user access, location, or date and time for this video", PageNames.Videos, Model.LanguageId)</div><br />
            <form asp-controller="Videos" asp-action="EditVideo" role="form">
                <div class="form-group">
                    <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("Tags", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-lg-10 col-md-10 col-sm-10">
                        <input id="tagList" type="text" asp-for="Video.Tags" value="@Model.Video.Tags!" placeholder="Add tag..." class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("Duration", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-md-10">
                        @{
                            int hours = 0;
                            int minutes = 0;
                            int seconds = 0;
                            if (Model.Video.DurationHours + Model.Video.DurationMinutes + Model.Video.DurationSeconds != string.Empty)
                            {
                                int.TryParse(Model.Video.DurationHours, out hours);
                                int.TryParse(Model.Video.DurationMinutes, out minutes);
                                int.TryParse(Model.Video.DurationSeconds, out seconds);
                            }
                        }
                        <div class="form-row">
                            <div class="col">
                                <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("H:", PageNames.Videos, Model.LanguageId)</label>
                                <input type="number" id="DurationHours" asp-for="Video.DurationHours" min="0" max="100" value="@hours!" class="form-control" />
                            </div>
                            <div class="col">
                                <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("m:", PageNames.Videos, Model.LanguageId)</label>
                                <input type="number" id="DurationMinutes" asp-for="Video.DurationMinutes" min="0" max="59" value="@minutes!" class="form-control" />
                            </div>
                            <div class="col">
                                <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("s:", PageNames.Videos, Model.LanguageId)</label>
                                <input type="number" id="DurationSeconds" asp-for="Video.DurationSeconds" min="0" max="59" value="@seconds!" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Video.AccessLevel" class="col-lg-3 col-sm-3 control-label">@await LocaleManager.GetTranslation("Access level", PageNames.AccessManagement, Model.LanguageId)</label>
                    <div class="col-lg-4">
                        <select class="selectpicker form-control-noline" data-style="btn-kinaunaselect" data-size="@Model.AccessLevelListEn.Count" asp-for="Video.AccessLevel" asp-items="@Model.AccessLevelListEn"></select>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Video.VideoTime" class="col-lg-3 col-sm-3 control-label">@await LocaleManager.GetTranslation("Video date and time", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-lg-4">
                        <div class="input-group date">
                            <input style="width: 300px;" id="datetimepicker1" data-format="dd-MMM-yyyy HH:mm:ss" type="text"
                                   class="form-control" data-zdp_readonly_element="false" asp-for="Video.VideoTime"
                                   value="@Model.Video.VideoTime?.ToString(longDateTimeFormat)!" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("Location", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-lg-10 col-md-10 col-sm-10">
                        <input id="locationInput" type="text" asp-for="Video.Location" value="@Model.Video.Location!" class="form-control"  />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("Latitude", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-lg-10 col-md-10 col-sm-10">
                        <input id="latitude" type="text" asp-for="Video.Latitude" value="@Model.Video.Latitude!" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("Longitude", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-lg-10 col-md-10 col-sm-10">
                        <input id="longitude" type="text" asp-for="Video.Longtitude" value="@Model.Video.Longtitude!" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("Altitude", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-lg-10 col-md-10 col-sm-10">
                        <input id="altitude" type="text" asp-for="Video.Altitude" value="@Model.Video.Altitude!" class="form-control" />
                    </div>
                </div>
                @if (Model.LocationsList.Any())
                {
                    <div class="form-group">
                        <label class="col-lg-3 col-sm-2 control-label">@await LocaleManager.GetTranslation("Copy Location Latitude and Longitude from Existing Location", PageNames.Videos, Model.LanguageId)</label>
                        <div class="col-12">
                            <div class="row">
                                <div class="col-lg-8 col-md-9 col-sm-8">
                                    <select id="copyLocation" class="selectpicker form-control-noline" data-style="btn-kinaunaselect" asp-items="@Model.LocationsList"></select>
                                </div>
                                <div class="col-lg-4 col-md-3 col-sm-3">
                                    <button id="copyLocationButton" type="button" class="btn btn-primary">@await LocaleManager.GetTranslation("Copy", PageNames.Videos, Model.LanguageId)</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="space-20"></div>
                <input asp-for="Video.VideoId" class="form-control" value="@Model.Video.VideoId!" type="hidden" />
                <input asp-for="Video.ProgenyId" class="form-control" value="@Model.CurrentProgenyId!" type="hidden" />
                <input asp-for="TagFilter" class="form-control" value="@ViewBag.TagFilter!" type="hidden" />
                <input asp-for="Video.Author" class="form-control" value="@Model.Video.Author!" type="hidden" />
                <div>
                    <div class="form-group">
                        <div class="col-lg-3 col-sm-3 control-label"></div>
                        <div class="col-lg-9">
                            <button class="btn btn-success leavePage" type="submit">@await LocaleManager.GetTranslation("Save", PageNames.AddItem, Model.LanguageId)</button>
                            <a class="btn btn-danger leavePage" asp-controller="@ViewContext.RouteData.Values["controller"]!" asp-action="@ViewContext.RouteData.Values["action"]!" asp-route-id="@ViewContext.RouteData.Values["id"]" asp-route-childId="@Model.CurrentProgenyId">@await LocaleManager.GetTranslation("Cancel", PageNames.AddItem, Model.LanguageId)</a>
                        </div>
                    </div>
                </div>
            </form>
            <form asp-controller="Videos" asp-action="DeleteVideo" role="form" method="get">
                <div class="form-group">
                    <label class="col-lg-3 col-sm-3 control-label">@await LocaleManager.GetTranslation("Remove this video:", PageNames.Videos, Model.LanguageId)</label>
                    <div class="col-lg-9">
                        <button class="btn btn-danger leavePage" type="submit">@await LocaleManager.GetTranslation("Delete video", PageNames.Videos, Model.LanguageId)</button>
                    </div>
                </div>
                <input name="videoId" class="form-control" value="@Model.Video.VideoId" type="hidden" />
            </form>
        </div>
        <script type="text/javascript">
            var copyLocationList = [];        
            @{
                string myLoc = "";
                string addLoc = "";
                foreach (Location loc in Model.ProgenyLocations)
                {
                    myLoc = myLoc + "let loc" + loc.LocationId + " = {id: " + loc.LocationId + ", name: \'" + loc.Name + "\', lat: " + loc.Latitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + ", lng: " + loc.Longitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + "};";
                    addLoc = addLoc + "copyLocationList.push(loc" + loc.LocationId + ");";
                }
            }
            @Html.Raw(myLoc)
            @Html.Raw(addLoc)
        </script>
        <script src="/js/videos/add-edit-video.js" type="module" asp-append-version="true"></script>
    }
<div class="space-20"></div>
<div style="max-width: 100%; padding-top: 10px; padding-bottom: 20px;">
        <div style="float: left">
            <a class="leavePage" asp-controller="Videos" asp-action="Video" asp-route-id="@Model.PrevVideo" asp-route-childId="@Model.CurrentProgeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@Model.TagFilter"><i class="fa fa-arrow-left" aria-hidden="true"></i> @viewPrevText @videosString</a>
        </div>
        <div style="float: right">
            <a class="leavePage" asp-controller="Videos" asp-action="Video" asp-route-id="@Model.NextVideo" asp-route-childId="@Model.CurrentProgeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@Model.TagFilter">@viewNextText @videosString <i class="fa fa-arrow-right" aria-hidden="true"></i></a>
        </div>
    </div>
</div>
