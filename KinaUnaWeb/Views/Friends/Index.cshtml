@model List<KinaUnaWeb.Models.ItemViewModels.FriendViewModel>
@{
    ViewData["Title"] = Model[0].Progeny.NickName + "'s Friends";
}
@{
    List<string> typeList = new List<string>();
    typeList.Add("Personal Friend");
    typeList.Add("Toy/Animal Friend");
    typeList.Add("Parent");
    typeList.Add("Family");
    typeList.Add("Caretaker");
}

@section Scripts
    {
    <script type="text/javascript">
        $(function() {
            $('.button-checkbox').each(function() {

                // Settings
                var $widget = $(this),
                    $button = $widget.find('button'),
                    $checkbox = $widget.find('input:checkbox'),
                    color = $button.data('color'),
                    settings = {
                        on: {
                            icon: 'fas fa-check-square'
                        },
                        off: {
                            icon: 'fas fa-square'
                        }
                    };

                // Event Handlers
                $button.on('click',
                    function() {
                        $checkbox.prop('checked', !$checkbox.is(':checked')).triggerHandler('click');
                        $checkbox.triggerHandler('change');
                        updateDisplay();
                    });
                $checkbox.on('change',
                    function() {
                        updateDisplay();
                    });

                // Actions
                function updateDisplay() {
                    var isChecked = $checkbox.is(':checked');

                    // Set the button's state
                    $button.data('state', (isChecked) ? "on" : "off");

                    // Set the button's icon
                    $button.find('.state-icon')
                        .removeClass()
                        .addClass('state-icon ' + settings[$button.data('state')].icon);

                    // Update the button's color
                    if (isChecked) {
                        $button
                            .removeClass('btn-default')
                            .addClass('btn-' + color + ' active');
                    } else {
                        $button
                            .removeClass('btn-' + color + ' active')
                            .addClass('btn-default');
                    }
                }

                // Initialization
                function init() {

                    updateDisplay();

                    // Inject the icon if applicable
                    if ($button.find('.state-icon').length == 0) {
                        $button.prepend('<i class="state-icon ' + settings[$button.data('state')].icon + '"></i> ');
                    }
                }

                init();
            });
        });
    </script>
    <script type="text/javascript">
        function ShowHideFiltersFunction() {
            var x = document.getElementById("filtersDiv");
            if (x.style.display === "none") {
                x.style.display = "block";
            } else {
                x.style.display = "none";
            }
        }
    </script>
}

<br />
@if (Model == null)
{
    <h3>@ViewData["Title"]</h3>
    <div>Nothing to see here yet.</div>
}
else
{
    <div class="card bg-light" style="clear: both; margin-top: 0px;">

        <div class="card-header card-header-success">

            @if (Model[0].IsAdmin)
            {
                <div class="btn-group" style="float: right;">
                    <a asp-controller="AddItem" asp-action="AddFriend" class="btn btn-info btn-round leavePage">
                        <i class="fas fa-plus"></i> Add Friend
                    </a>
                </div>
            }
            <h3 class="title">@ViewData["Title"]</h3>
        </div>
        <div class="card-body mx-auto d-block" style="padding-bottom: 35px;">
            <div>
                <span style="color: black">Show:</span>
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Personal Friends</button>
                    <input type="checkbox" name="friendClass0" style="margin-right: 18px;" checked="checked" class="hidden" hidden />
                </span>
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Toy/Animal Friends</button>
                    <input type="checkbox" name="friendClass1" style="margin-right: 18px;" checked="checked" class="hidden" hidden />
                </span>
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Parents</button>
                    <input type="checkbox" name="friendClass2" style="margin-right: 18px;" checked="checked" class="hidden" hidden />
                </span>
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Family</button>
                    <input type="checkbox" name="friendClass3" style="margin-right: 18px;" checked="checked" class="hidden" hidden />
                </span>
                <span class="button-checkbox">
                    <button type="button" class="btn" data-color="primary">Caretakers</button>
                    <input type="checkbox" name="friendClass4" style="margin-right: 18px;" checked="checked" class="hidden" hidden />
                </span>
            </div>
            @if (!String.IsNullOrEmpty(ViewBag.TagFilter))
            {
                <br />
                <div class="text-dark" style="float: right;">Tag filter: <span class="badge badge-pill badge-rose">@ViewBag.TagFilter</span> <a class="btn btn-info btn-sm leavePage" asp-action="Index" asp-route-childId="@Model[0].Progeny.Id"><i class="fas fa-minus-circle"></i> Reset Filter</a></div>
                <br />
            }
            <div class="card-deck" style="clear: both;">
                @foreach (var friendViewModel in Model)
                {
                    string chkClass = "friendClass" + friendViewModel.Type.ToString();
                    <a class="@chkClass leavePage" style="margin-bottom: 15px;" asp-controller="Friends" asp-action="FriendDetails" asp-route-friendId="@friendViewModel.FriendId" name="@chkClass">
                        <div class="card text-white bg-primary" style="padding: 3px; float: left; clear: right; text-align: center; height: 100%; width: 305px; margin-bottom: 15px; margin-left: 5px; margin-right: 5px;">
                            <div class="card-header card-header-rose card-title h4">@friendViewModel.Name</div>
                            <img class="img-thumbnail mx-auto d-block" style="max-height: 300px; max-width: 280px; background: black; margin-bottom: 10px;" src="@friendViewModel.PictureLink" />
                            <div class="card-body">
                                <div align="left">
                                    <strong>Friends since: </strong>
                                    <span align="left">
                                        @if (friendViewModel.FriendSince != null)
                                        {
                                            @friendViewModel.FriendSince.Value.ToString("dd-MMM-yyyy")
                                        }
                                        else
                                        {
                                            <span>N/A</span>
                                        }
                                    </span>
                                </div>
                                <div align="left">
                                    <strong>Type:</strong> @typeList[friendViewModel.Type]
                                </div>
                                <div align="left">
                                    <strong>Context:</strong> @friendViewModel.Context
                                </div>
                            </div>
                        </div>
                    </a>
                }
            </div>
            <br />
            <div style="max-width: 100%; padding-top: 10px; padding-bottom: 20px; clear: both;">
                @{
                    if (!string.IsNullOrEmpty(ViewBag.Tags))
                    {
                        string[] tagsList = ViewBag.Tags.Split(',');
                        foreach (string tagString in tagsList)
                        {
                            <a asp-action="Index" asp-route-childId="@Model[0].Progeny.Id" asp-route-tagFilter="@tagString" class="badge badge-pill badge-rose leavePage">@tagString</a>
                        }
                    }
                }
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    //<![CDATA[

    $("input:checkbox:not(:checked)").each(function() {
        var anchor = document.getElementsByClassName($(this).attr("name"));
        $(anchor).hide();
    });

    $("input:checkbox").change(function() {
        var anchor = document.getElementsByClassName($(this).attr("name"));
        $(anchor).toggle();
    });
//]]>
</script>