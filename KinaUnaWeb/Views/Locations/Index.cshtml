@using System.Globalization
@using KinaUna.Data
@using KinaUna.Data.Extensions
@using KinaUnaWeb.Services
@model KinaUnaWeb.Models.ItemViewModels.LocationViewModel
@inject ILocaleManager LocaleManager
@{
    ViewData["Title"] = await LocaleManager.GetTranslation("Locations", PageNames.Locations, Model.LanguageId);
    bool allowHereMaps = Context.Request.HereMapsCookieSet();
    string sortString = await LocaleManager.GetTranslation("Sort:", PageNames.Locations, Model.LanguageId);
    string ascendingString = await LocaleManager.GetTranslation("Ascending", PageNames.Contacts, Model.LanguageId);
    string descendingString = await LocaleManager.GetTranslation("Descending", PageNames.Contacts, Model.LanguageId);
    string pageParameters = Json.Serialize(Model.LocationsPageParameters).ToString();
}
<div id="locations-page-parameters" class="d-none" data-locations-page-parameters="@pageParameters"></div>
<div id="popup-location-id-div" class="d-none" data-popup-location-id="@Model.LocationId"></div>
<div class="ml-xl-auto mr-xl-auto col-xxl-11 col-xxxl-10">
    <div class="row">
        <div class="col-12">
            <div class="page-tab-container">
                <div class="page-tab active" id="page-title-div">
                    <a class="btn-page-tab active leave-page" asp-controller="Locations" asp-action="Index">
                        <i class="material-icons sidebar-icon">person_pin</i> @ViewData["Title"]
                    </a></div>
                <div class="page-tab">
                    <a class="btn-page-tab leave-page" asp-controller="Locations" asp-action="PhotoLocations">
                        <i class="fas fa-map-marked-alt sidebar-icon"></i> @await LocaleManager.GetTranslation("Photo locations", PageNames.Locations, Model.LanguageId)
                    </a></div>
            </div>
            <div id="settings-notification-div" class="mt-5 float-right small text-muted"></div>
        </div>
    </div>
    <div class="row m-0 ml-1" style="clear: both; margin-top: 25px;">
        <div class="col-12">
            @if (allowHereMaps)
            {
                <div style="width: 100%; height: 60vh;" id="locations-page-map-container-div"></div>
            }
            else
            {
                <div class="col-12 col-md-10 col-lg-9 col-xl-8 col-xxl-7 col-w1900-6 col-w2500-5">
                    <div class="space-20"></div>
                    <div>@await LocaleManager.GetTranslation("Cookie consent for Here maps has not been granted. To use maps enable cookies for Here Maps.", PageNames.Layout, Model.LanguageId)</div>
                    <div class="space-20"></div>
                    @if (Context.Request.ConsentCookieSet())
                    {
                        @await Html.PartialAsync("_CookieConsentPartial", Model.LanguageId)
                    }
                </div>
            }
        </div>
    </div>
    <div class="space-70"></div>
    <div class="row m-0 ml-1">
        <div class="ml-xl-auto mr-xl-auto col-12 col-xxl-11 col-xxxl-10">
            <div class="row">
                <div class="col-12">
                    @if (!string.IsNullOrEmpty(Model.TagFilter))
                    {
                        <div class="space-20"></div>
                        <div class="text-dark" style="float: right;">
                            @await LocaleManager.GetTranslation("Tag filter:", PageNames.Locations, Model.LanguageId) <span class="badge badge-pill badge-rose">@Model.TagFilter</span>
                            <button id="reset-tag-filter-button" class="btn btn-info btn-sm">
                                <i class="fas fa-minus-circle"></i> @await LocaleManager.GetTranslation("Reset filter", PageNames.Locations, Model.LanguageId)
                            </button>
                        </div>
                        <div class="space-20"></div>
                    }
                    <div class="space-70"></div>
                    <div id="location-list-parent-div" class="row">
                        <div id="location-list-div" class="mr-auto ml-auto row" style="display: contents;">
                        </div>
                        <div id="loading-items-parent-div" class="col-12" style="height: 150px;">
                            <div id="loading-items-div" class="w-100">
                                <div class="space-50"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="space-20"></div>
            <div class="row">
                <div class="col-12">
                    <div class="space-20"></div>
                    <div id="tags-list-div" class="row row-cols-auto" style="display: contents;">
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="space-20"></div>
<div class="d-none">
    <div id="page-settings-content-div" class="bg-dark page-settings-content">
        <div class="row">
            <div class="col-auto ml-auto">
                <button id="close-page-settings-button" class="ml-auto btn btn-link btn-link-yellow p-2">
                    <i class="material-icons icon-top-4">close</i>
                </button>
            </div>
        </div>
        <div class="p-4">
            <div class="row">
                <div class="col h5">
                    @await LocaleManager.GetTranslation("Page settings", PageNames.Layout, Model.LanguageId)
                </div>
            </div>
            <div class="space-20"></div>
            <div class="row">
                <div class="col-12">
                    @sortString
                </div>
                <div class="col-auto ml-4">
                    <div class="row align-items-center">
                        <div class="col">
                            <button id="settings-sort-ascending-button" class="btn btn-outline-info active"><i class="material-icons icon-top-4">update</i> @ascendingString</button>
                        </div>
                        <div class="col">
                            <button id="settings-sort-descending-button" class="btn btn-outline-info"><i class="material-icons icon-top-4">history</i> @descendingString</button>
                        </div>
                    </div>
                    <div class="row align-items-center">
                        <div class="col">
                            <button id="settings-sort-by-date-button" class="btn btn-outline-info active">
                                <i class="material-icons icon-top-4">schedule</i> @await LocaleManager.GetTranslation("Date", PageNames.Locations, Model.LanguageId)
                            </button>
                        </div>
                        <div class="col">
                            <button id="settings-sort-by-name-button" class="btn btn-outline-info"><i class="material-icons icon-top-4">sort_by_alpha</i> @await LocaleManager.GetTranslation("Name", PageNames.Locations, Model.LanguageId)</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="space-20"></div>
            <div class="row">
                <div class="col-12">
                    @await LocaleManager.GetTranslation("Sort tags:", PageNames.Pictures, Model.LanguageId)
                </div>
                <div class="col ml-4">
                    <div class="row" style="font-size: small; margin-top: 5px;">
                        <div class="col">
                            <select id="sort-tags-select" class="selectpicker form-control-noline" data-style="btn-kinaunaselect">
                                <option value="0" selected="selected">@await LocaleManager.GetTranslation("Use locations sort order", PageNames.Locations, Model.LanguageId)</option>
                                <option value="1">@await LocaleManager.GetTranslation("Alphabetically", PageNames.Pictures, Model.LanguageId)</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="space-20"></div>
            <div class="row">
                <div class="col-12">
                    @await LocaleManager.GetTranslation("Set as default page settings", PageNames.Pictures, Model.LanguageId)
                </div>
                <div class="col ml-4">
                    <div class="row">
                        <div class="col" style="max-width: 5em;">
                            <input id="settings-save-default-checkbox" type="checkbox" class="form-control" style="width: 2em; height: 2em; accent-color: #302e36;" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="space-20"></div>
            <div class="row">
                <div class="col-12">
                    <button id="locations-page-save-settings-button" class="btn btn-success float-right"><i class="material-icons icon-top-4">save</i> @await LocaleManager.GetTranslation("Save", PageNames.AddItem, Model.LanguageId)</button>
                </div>

            </div>
        </div>
    </div>
    <div id="show-page-settings-button-div" style="position: absolute; top: 60px; right: 0;">
        <button id="page-settings-button" class="btn btn-link btn-link-yellow bg-dark p-3 m-2" style="border-radius: 33%">
            <span><i class="material-icons icon-top-4">settings</i></span>
        </button>
    </div>
</div>

@if (allowHereMaps)
{
    <script>
        let lastSelected;
        let pixelRatio = window.devicePixelRatio || 1;
        
        let platform = new H.service.Platform({
            'apikey': '@Model.HereMapsApiKey',
            'useHTTPS': true
        });

        let defaultLayers = platform.createDefaultLayers();

        let maptypes = platform.createDefaultLayers({
            tileSize: pixelRatio === 1 ? 256 : 512,
            ppi: pixelRatio === 1 ? undefined : 320
        });
        maptypes.vector.normal.map.setMin(2);

        let map = new H.Map(document.getElementById('locations-page-map-container-div'),
            defaultLayers.vector.normal.map,
            {
                zoom: 3,
                center: { lng: @Model.LocationItem.Longitude.ToString(new CultureInfo("en-US")).Replace(',', '.'), lat: @Model.LocationItem.Latitude.ToString(new CultureInfo("en-US")).Replace(',', '.') },
                pixelRatio: pixelRatio
            });


        let ui = H.ui.UI.createDefault(map, maptypes);
        let behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

        @*let defaultIcon = new H.map.Icon("/images/purplemarker.svg", { size: { w: 36, h: 36 } });
         let group = new H.map.Group();
        @{
            string locGroup = "[";
            string polyCode = "";
            string markerCode = "";
            string setData = "";
        }
        @if (Model.LocationsList != null && Model.LocationsList.Any())
        {
            foreach (Location lineLoc in Model.LocationsList)
            {
                string pPoint = "lineString.pushPoint({lat:" + lineLoc.Latitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + ", lng:" + lineLoc.Longitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + "});";
                string pMarker = "let marker" + lineLoc.LocationId + " = new H.map.Marker({lat:" + lineLoc.Latitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + ", lng:" + lineLoc.Longitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + "}, {icon: defaultIcon});";
                string sMarker = "marker" + lineLoc.LocationId + ".setData(" + lineLoc.LocationId + ");";
                locGroup = locGroup + "marker" + lineLoc.LocationId + ", ";
                polyCode = polyCode + pPoint;
                markerCode = markerCode + pMarker;
                setData = setData + sMarker;

            }

            locGroup = locGroup.Trim().TrimEnd(',') + "]";
        }
        
        @Html.Raw(markerCode)
        @Html.Raw(setData);
        group.addObjects(@locGroup);
        map.addObject(group);
        function addPolylineToMap(map) {
            let lineString = new H.geo.LineString();
        @Html.Raw(polyCode)
                map.addObject(new H.map.Polyline(
                    lineString, { style: { lineWidth: 4 } }
                ));
        }
        addPolylineToMap(map);
        map.getViewModel().setLookAtData({ bounds: group.getBoundingBox() }); *@
    </script>
}

<script src="/js/locations/locations-index.js" type="module" asp-append-version="true"></script>