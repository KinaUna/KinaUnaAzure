@using KinaUna.Data.Extensions
@model KinaUnaWeb.Models.ItemViewModels.PictureViewModel
<button class="item-btn picture-item" data-picture-id="@Model.PictureId">
    <div class="bg-primary timeline-card">
        <div class="timeline-card-body bg-photo">
            <div class="row">
                <div class="col-auto">
                    <span class="timeline-icon"><i class="material-icons">photo_library</i></span>
                </div>
                <div class="col">
                    <div class="timeline-title">
                        <img src="@Model.Progeny.GetProfilePictureUrl()" style="float: right; max-height: 24px; margin-top: 2px; margin-right: 6px; margin-left: 4px; border-radius: 10px; right: 8px; position: absolute;"/>
                        <div>
                            @Model.PictureTime?.ToString("dd-MMM-yyyy HH:mm")
                        </div>
                        
                    </div>
                    
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="img-rounded picture-element-image">
                        <img class="lazyload" data-src="@Model.PictureLink" style="width:100%"/>
                        <div class="img-rounded" style="position: absolute; height: 25px; width: 50px; bottom: 2px; right: 2px; font-size: 5px; background-color: forestgreen; display: inline-block;">
                            <p style="width: 40px; height: 20px; font-size: 12px; position: absolute; color: lightgoldenrodyellow; text-align: center; transform: translate(6px, 4px);"><i class="far fa-comment-alt"></i> @Model.CommentsCount</p>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Location))
                    {
                        <div style="color: lightblue; margin-top: 8px"><i class="material-icons" style="font-size: 18px;">location_on</i> @Model.Location</div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Tags))
                    {
                        List<string> tagsList = Model.Tags.Split(',').ToList();
                        <div class="float-right">
                            @foreach (string tagString in tagsList)
                            {
                                <span class="btn tag-item tag-item-sm">@tagString</span>
                            }
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</button>