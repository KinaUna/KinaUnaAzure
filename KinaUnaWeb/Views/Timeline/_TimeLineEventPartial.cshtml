@using System.Text.RegularExpressions
@using KinaUnaWeb.Services
@using KinaUna.Data
@using KinaUna.Data.Extensions
@model CalendarItem
@inject ILocaleManager LocaleManager
@{
    int languageId = LocaleManager.GetLanguageId(Context.Request);
    Model.StartTime ??= DateTime.MinValue;
    Model.EndTime ??= DateTime.MinValue;
    string startDateString = Model.StartTime.Value.ToString("dd MMM yyyy");
    if (Model.AllDay && Model.StartTime.Value.Date != Model.EndTime.Value.Date)
    {
        if (Model.StartTime.Value.Year == Model.EndTime.Value.Year)
        {
            startDateString = Model.StartTime.Value.ToString("dd MMM");
            if (Model.StartTime.Value.Month == Model.EndTime.Value.Month)
            {
                startDateString = Model.StartTime.Value.ToString("dd");
            }
        }
    }
    string startTimeString = Model.StartTime.Value.ToString("HH:mm");
    string endDateString = Model.EndTime.Value.ToString("dd MMM yyyy");
    string endTimeString = Model.EndTime.Value.ToString("HH:mm");

    if (Model.StartTime.Value.Date == Model.EndTime.Value.Date)
    {
        endDateString = string.Empty;
    }
}
<button class="item-btn calendar-event-item" data-calendar-event-id="@Model.EventId" data-event-year="@Model.StartTime.Value.Year" data-event-month="@Model.StartTime.Value.Month" data-event-day="@Model.StartTime.Value.Day">
    <div class="bg-primary timeline-card">
        <div class="timeline-card-body bg-calendar">
            <div class="row">
                <div class="col-auto">
                    <span class="timeline-icon"><i class="material-icons">event_note</i></span>
                </div>
                <div class="col">
                    <div class="row timeline-title text-white">
                        <img src="@Model.Progeny.GetProfilePictureUrl()" style="float: right; max-height: 24px; margin-top: 2px; margin-right: 6px; margin-left: 4px; border-radius: 10px; right: 8px; position: absolute;" />
                        <div>
                            @if (Model.AllDay)
                            {

                                if (string.IsNullOrEmpty(endDateString))
                                {
                                    <div class="col-auto">@startDateString</div>
                                }
                                else
                                {
                                    <div class="col-auto"><span>@startDateString</span> - <span>@endDateString</span></div>
                                }
                            }
                            else
                            {
                                if (Model.StartTime.Value.Date == Model.EndTime.Value.Date)
                                {
                                    <div class="col-auto">@startDateString</div>
                                    <div class="col-auto font-weight-normal">@startTimeString - @endTimeString</div>
                                }
                                else
                                {
                                    <div class="col-auto">
                                        <div class="row">
                                            <div class="col">@startDateString</div>
                                        </div>
                                        <div class="row">
                                            <div class="col font-weight-normal text-right">@startTimeString</div>
                                        </div>
                                    </div>
                                    <div class="col-auto">
                                        <div class="row">
                                            <div class="col">@endDateString</div>
                                        </div>
                                        <div class="row">
                                            <div class="col font-weight-normal ">@endTimeString</div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="timeline-title row">
                        <div class="col-12">
                            @Model.Title
                        </div>
                    </div>
                    <div class="timeline-text row text-white-75">
                        @if (!string.IsNullOrEmpty(Model.Location))
                        {
                            <div class="col-12 calendar-event-popup-label">
                                <div class="space-10"></div>
                                <i class="material-icons" style="font-size: 18px;">location_on</i> @Model.Location
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.Notes))
                        {
                            <div class="col-12" style="max-height: 200px; overflow: hidden;">
                                <div class="space-10"></div>
                                <div class="calendar-event-popup-label">
                                    <i class="material-icons" style="font-size: 18px;">note</i> @await LocaleManager.GetTranslation("Notes:", PageNames.Calendar, languageId)
                                </div>
                                <div class="space-10"></div>
                                @{
                                    string notesWithBrTags = Regex.Replace(Model.Notes, @"\r\n?|\n", "<br />");
                                }
                                <div>@Html.Raw(notesWithBrTags)</div>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.Context))
                        {
                            List<string> contextsList = Model.Context.Split(',').ToList();
                            <div class="col-12 mt-2 text-right">
                                @foreach (string contextString in contextsList)
                                {
                                    <span class="btn context-item tag-item-sm">@contextString</span>
                                }
                            </div>
                        }
                    </div>
                </div>
                
            </div>
        </div>
    </div>
</button>