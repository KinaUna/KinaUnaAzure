@using Microsoft.AspNetCore.Antiforgery
@model KinaUnaWeb.Models.AdminViewModels.ManageKinaUnaTextsViewModel
@inject IAntiforgery AntiForgery
@{
    ViewData["Title"] = "Manage Texts";
}
<div class="ml-xl-auto mr-xl-auto col-xxl-11 col-xxxl-10">
    <div class="space-20"></div>
    <div class="add-item-container">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="space-20"></div>
                    <h2>@ViewData["Title"]</h2>
                    <div class="space-20"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    @foreach (KinaUnaText kinaUnaText in Model.Texts)
                    {
                        <div class="row">
                            <div class="col-12">
                                <div><a class="btn btn-primary" onclick="editModal('@kinaUnaText.TextId', 'Edit @kinaUnaText.Title', '@Model.LanguageId')">Edit @kinaUnaText.Title</a></div>
                            </div>
                        </div>
                        <div class="space-20"></div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" id="editTextModal">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .e-rte-image-popup.e-rte-quick-popup {
        z-index: 20001 !important;
    }
</style>
<script>
    let kinaUnaTextId;
    let kinaUnaTextTitle;
    let kinaUnaTextLanguageId;

    function onImageUploadSuccess(args) {
        if (args.e.currentTarget.getResponseHeader('name') != null) {
            args.file.name = args.e.currentTarget.getResponseHeader('name');
            var filename = document.querySelectorAll(".e-file-name")[0];
            filename.innerHTML = args.file.name.replace(document.querySelectorAll(".e-file-type")[0].innerHTML, '');
            filename.title = args.file.name;
        }
    }

    let defaultRTE;

    function onrtecreated() {
        setTimeout(function() {
                let rteElement = document.getElementById('textTextRTE').ej2_instances[0];
                rteElement.refreshUI();
            },
            1000);
        defaultRTE = this;
    }

    function onrtefocus() {
        let rteElement = document.getElementById('textTextRTE').ej2_instances[0];
        rteElement.refreshUI();
    }

    function updateTitle() {
        let editTitleSource = document.getElementById('editTitleInput');
        let editTitleTarget = document.getElementById('textTitleInput');
        editTitleTarget.value = editTitleSource.value;
    }

    function run_waitMeModal() {
        $('#editTextModal .modal-body').waitMe({
            effect: 'bounce',
            text: '',
            bg: 'rgba(255,255,255,0.7)',
            color: '#3a2051',
            maxSize: '',
            waitTime: -1,
            source: '',
            textPos: 'vertical',
            fontSize: '',
            onClose: function () { }
        });
    }

    $(function () {
        editModal = (textId, title, languageId) => {
            run_waitMeModal();
            kinaUnaTextId = textId;
            kinaUnaTextTitle = title;
            try {
                $.ajax({
                    type: 'GET',
                    url: "/Admin/EditTextTranslation?textId=" + textId + "&languageId=" + languageId,
                    contentType: false,
                    datatype: "html",
                    async: true,
                    success: function (res) {
                        $('#editTextModal .modal-body').waitMe("hide");
                        $('#editTextModal .modal-body').html(res);
                        $('#editTextModal .modal-title').html(title);
                        $('#editTextModal').modal('show');
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
                return false;
            } catch (ex) {
                console.log(ex);
                $('#editTextModal .modal-body').waitMe("hide");
            }
            return false;
        }
    });

    function saveText() {
        run_waitMeModal();
        let textId = document.getElementById('textIdInput').value;
        let textPage = document.getElementById('textPageInput').value;
        let textTitle = document.getElementById('textTitleInput').value;
        let textLanguageId = document.getElementById('textLanguageIdInput').value;
        let textText = defaultRTE.value;
        let textItem = { Id: textId, Page: textPage, Title: textTitle, LanguageId: textLanguageId, Text: textText }
        return $.ajax({
            type: "POST",
            beforeSend: function(request) { request.setRequestHeader("RequestVerificationToken", "@AntiForgery.GetTokens(Context).RequestToken"); },
            url: "/Admin/EditTextTranslation",
            contentType: 'application/json',
            data: JSON.stringify(textItem),
            datatype: "html",
            async: true,
            success: function (data) {
                $('#editTextModal .modal-body').waitMe("hide");
                $('#editTextModal .modal-body').html(data);
            },
            error: function (jqXhr, textStatus, errorThrown) {
                console.log(textStatus, errorThrown);
                $('#editTextModal .modal-body').waitMe("hide");
            }
        });
    }

    function editTextLanguageListChange() {
        let languageListObj = document.getElementById('languageList').ej2_instances[0];
        let langValTemp = languageListObj.itemData;

        if (langValTemp.Id !== kinaUnaTextLanguageId) {
            kinaUnaTextLanguageId = langValTemp.Id;
            editModal(kinaUnaTextId, kinaUnaTextTitle, langValTemp.Id);
        }
    }
</script>