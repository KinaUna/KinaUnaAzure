@using System.Globalization
@using KinaUna.Data
@model KinaUnaWeb.Models.ItemViewModels.PictureViewModel

@{
    ViewData["Title"] = Model.Progeny.NickName + "'s Photo";
    string viewPrevText = "Older";
    string viewNextText = "Newer";
    if (Model.SortBy == 1)
    {
        viewPrevText = "Newer";
        viewNextText = "Older";
    }
}
<h3 class="title">@ViewData["Title"] - @Model.PictureNumber of @Model.PictureCount</h3>
<div id="photoDiv">
    @if (!String.IsNullOrEmpty(Model.TagFilter))
    {
        <div>Tag Filter: @Model.TagFilter</div>
    }
    <div style="max-width: 100%; padding-top: 10px; padding-bottom: 20px;">
        <div style="float: left">
            <a id="previousPhotoLink" class="leavePage" asp-controller="Pictures" asp-action="Picture" asp-route-id="@Model.PrevPicture" asp-route-childId="@Model.Progeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@Model.TagFilter"><i class="fa fa-arrow-left" aria-hidden="true"></i> @viewPrevText Photo</a>
        </div>

        <div style="float: right">
            <a id="nextPhotoLink" class="leavePage" asp-controller="Pictures" asp-action="Picture" asp-route-id="@Model.NextPicture" asp-route-childId="@Model.Progeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@Model.TagFilter">@viewNextText Photo <i class="fa fa-arrow-right" aria-hidden="true"></i></a>
        </div>
    </div>
    <br />
    <div align="center" style="max-width: 100%">
        @*<a class="leavePage" href="@ViewBag.ImageFullSize">*@
        <img src="@Model.PictureLink" class="img-responsive" style="max-height: 90vh; max-width: 100%;" />
        @*</a>*@
    </div>

    <div>
        @{
            if (!string.IsNullOrEmpty(Model.Tags))
            {
                List<string> tagsList = Model.Tags.Split(',').ToList();
                foreach (string tagString in tagsList)
                {
                    <a asp-action="Index" asp-route-id="1" asp-route-childId="@Model.Progeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@tagString" class="badge badge-pill badge-rose leavePage">@tagString</a>
                }
            }
        }
    </div>
    <br />
    @if (Model.PicTimeValid)
    {
        <div style="font-size: 16px; line-height: 90%;">
            <p>Photo taken: @Model.PicTime</p>
            <p>@Model.Progeny.NickName was @Model.PicYears years old.</p>
            <p>@Model.Progeny.NickName was @Model.PicMonths months old.</p>
            <p>@Model.Progeny.NickName was @Model.PicWeeks[0] weeks and @Model.PicWeeks[1] days old.</p>
            <p>@Model.Progeny.NickName was @Model.PicDays days old.</p>
            <p>@Model.Progeny.NickName was @Model.PicHours hours old.</p>
            <p>@Model.Progeny.NickName was @Model.PicMinutes minutes old.</p>
        </div>
        <br />

    }
</div>

@if (User.Identity.IsAuthenticated && !String.IsNullOrEmpty(Model.Longtitude))
{
    <div style="font-size: 16px; line-height: 90%;">
        <p>Location: @Model.Location</p>

        @if (!String.IsNullOrEmpty(Model.Latitude))
        {
            <p>Latitude: @Model.Latitude Longitude: @Model.Longtitude Altitude: @Model.Altitude</p>
            <div style="width: 100%; height: 300px" id="mapContainer"></div>
            <script>
                let pixelRatio = window.devicePixelRatio || 1;
                let iconWidth = Math.floor(36 * pixelRatio + (pixelRatio - 1) * 8);
                let iconHeight = Math.floor(36 * pixelRatio + (pixelRatio - 1) * 8);
                let defaultIcon = new H.map.Icon("/images/purplemarker.svg", { size: { w: iconWidth, h: iconHeight } });
                var platform = new H.service.Platform({
                    'app_id': '@Constants.HereMapsId',
                    'app_code': '@Constants.HereMapsCode',
                    'useHTTPS': true
                });

                var maptypes = platform.createDefaultLayers({
                    tileSize: pixelRatio === 1 ? 256 : 512,
                    ppi: pixelRatio === 1 ? undefined : 320
                });

                var map = new H.Map(document.getElementById('mapContainer'),
                    maptypes.normal.map,
                    {
                        zoom: 14,
                        center: { lng: @Model.Longtitude, lat: @Model.Latitude },
                        pixelRatio: pixelRatio
                    });
                @*map.addObject(new H.map.Marker({ lng: @Model.Longtitude, lat: @Model.Latitude}));*@
                var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
                var ui = H.ui.UI.createDefault(map, maptypes);

                let marker = new H.map.Marker({ lat: @Model.Latitude.ToString(new CultureInfo("en-US")).Replace(',', '.'), lng: @Model.Longtitude.ToString(new CultureInfo("en-US")).Replace(',', '.')}, { icon: defaultIcon });
                map.addObject(marker);

                var reverseGeocodingParameters = {
                    prox: '@Model.Latitude,  @Model.Longtitude, 32',
                    mode: 'retrieveAddresses',
                    maxresults: 1
                };

                function onGeoSuccess(result) {
                    var location = result.Response.View[0].Result[0];
                    var contextText = "";
                    var streetName = "";
                    var districtName = "";
                    var cityName = "";
                    var countyName = "";
                    var stateName = "";
                    if (location.Location.Address.Street !== undefined) {
                        streetName = location.Location.Address.Street;
                        contextText = contextText + location.Location.Address.Street;
                    }
                    if (location.Location.Address.District !== undefined) {
                        districtName = location.Location.Address.District;
                        if (districtName !== streetName) {
                            contextText = contextText + " " + location.Location.Address.District;
                        }
                    }
                    if (location.Location.Address.City !== undefined) {
                        cityName = location.Location.Address.City;
                        if (cityName !== districtName && districtName.indexOf(cityName) < 0) {
                            contextText = contextText + ", " + location.Location.Address.City;
                        }
                    }
                    if (location.Location.Address.County !== undefined) {
                        countyName = location.Location.Address.County;
                        if (countyName !== cityName && cityName.indexOf(countyName) < 0 && countyName.indexOf(cityName) < 0) {
                            contextText = contextText + ", " + location.Location.Address.County;
                        }
                    }
                    if (location.Location.Address.State !== undefined) {
                        stateName = location.Location.Address.State;
                        if (stateName !== cityName && stateName !== countyName) {
                            contextText = contextText + ", " + location.Location.Address.State;
                        }
                    }
                    if (location.Location.Address.AdditionalData[0].value !== undefined) {
                        contextText = contextText + ", " + location.Location.Address.AdditionalData[0].value;
                    }
                    contextText = contextText.replace(/(^,)|(,$)/g, "").trim();
                    ui.addBubble(new H.ui.InfoBubble({
                        lat: location.Location.DisplayPosition.Latitude,
                        lng: location.Location.DisplayPosition.Longitude
                    }, { content:  contextText }));
                };
                var geocoder = platform.getGeocodingService();
                geocoder.reverseGeocode(
                    reverseGeocodingParameters,
                    onGeoSuccess,
                    function (e) { console.log('Error in Reverse Geocode: ' + e);});

            </script>
        }
    </div>
    <br />
}

@if (Model.CommentsList.Count > 0)
{
    <div>
        <div>
            <h5>Comments (@Model.CommentsCount):</h5>
        </div>
        <div class="col-md-10">
            <div class="media-area">
                @foreach (Comment cmnt in Model.CommentsList)
                {
                    <div class="card bg-light text-dark">
                        <div class="card-body">
                            <div class="float-left" style="margin-left: -15px; margin-right: 5px;">
                                <div class="img-circle" style="height: 46px; width: 46px;">
                                    <img height="40" width="40" class="media-object rounded img-fluid" src="@cmnt.AuthorImage" />
                                </div>
                            </div>
                            <h6 class="text-muted" style="margin-top: 0; padding-top: 0;">
                                @cmnt.DisplayName <small> · @cmnt.Created.ToString("dd-MMM-yyyy HH:mm")</small>
                            </h6>
                            <p>
                                @cmnt.CommentText
                            </p>
                            <br />
                            @if (cmnt.Author == Model.UserId)
                            {
                                <div class="media-footer">
                                    <form class="form-inline float-right" asp-controller="AddItem" asp-action="DeletePictureComment" role="form" method="post">

                                        <div class="form-group">
                                            <div>
                                                <button class="btn btn-danger btn-sm leavePage" type="submit">Delete Comment</button>
                                            </div>
                                        </div>
                                        <input Name="CommentThreadNumber" class="form-control" value="@Model.CommentThreadNumber" type="hidden" />
                                        <input Name="CommentId" class="form-control" value="@cmnt.CommentId" type="hidden" />
                                        <input Name="PictureId" class="form-control" value="@Model.PictureId" type="hidden" />
                                        <input Name="ProgenyId" class="form-control" value="@Model.ProgenyId" type="hidden" />
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
@if (User.Identity.IsAuthenticated)
{
    <form asp-controller="AddItem" asp-action="AddPictureComment" role="form" method="post">
        <div class="form-group">
            <label Name="CommentText" class="col-lg-3 col-sm-3 control-label">New Comment:</label>
            <div class="col-md-10">
                <textarea Name="CommentText" class="form-control" rows="4"></textarea>
            </div>
            <div class="col-md-10">
                <button class="btn btn-success float-right leavePage" style="margin-right: 15px;" type="submit">Add Comment</button>
            </div>
        </div>
        <input asp-for="CommentThreadNumber" class="form-control" value="@Model.CommentThreadNumber" type="hidden" />
        <input asp-for="SortBy" class="form-control" value="@Model.SortBy" type="hidden" />
        <input asp-for="PictureId" class="form-control" value="@Model.PictureId" type="hidden" />
        <input name="ItemId" class="form-control" value="@Model.PictureId" type="hidden" />
        <input asp-for="ProgenyId" class="form-control" value="@Model.ProgenyId" type="hidden" />
    </form>
}
<br />

@if (Model.IsAdmin)
{
    @section Scripts{
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/zebra_datepicker/dist/css/bootstrap/zebra_datepicker.min.css">
        <link href="/css/amsify.suggestags.css" rel="stylesheet" />
        <script src="/lib/jquery.amsify.suggestags.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/zebra_datepicker/dist/zebra_datepicker.min.js"></script>
        <script src="https://js.api.here.com/v3/3.0/mapsjs-core.js" type="text/javascript" charset="utf-8"></script>
        <script src="https://js.api.here.com/v3/3.0/mapsjs-service.js" type="text/javascript" charset="utf-8"></script>
        <script src="https://js.api.here.com/v3/3.0/mapsjs-ui.js" type="text/javascript" charset="utf-8"></script>
        <script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-mapevents.js"></script>
        <link rel="stylesheet" type="text/css" href="https://js.api.here.com/v3/3.0/mapsjs-ui.css" />
    }

    <div class="col-sm-3" style="margin-top: 35px;"></div>
    <div class="col-md-8">
        <button id="toggleEditBtn" class="btn btn-info">Edit Photo</button>
    </div>
    <div id="editSection" style="display: none; padding: 15px;">
        <div>Edit user access, location, or date and time for this picture</div><br />
        <form asp-controller="AddItem" asp-action="EditPicture" role="form">
            <div class="form-group">
                <label class="col-lg-3 col-sm-2 control-label">Tags</label>
                <div class="col-lg-10 col-md-10 col-sm-10">
                    <input id="tagList" type="text" asp-for="Tags" value="@Model.Tags" placeholder="Add tag..." class="form-control" />
                </div>
                <script>
                    $('input[name="Tags"').amsifySuggestags({
                        suggestions: @Html.Raw(Model.TagsList)
                    });
                </script>
            </div>
            <div class="form-group">
                <label asp-for="AccessLevel" class="col-lg-3 col-sm-3 control-label">Access Level</label>
                <div class="col-lg-4">
                    <select class="selectpicker form-control-noline" data-style="btn-kinaunaselect" data-size="@Model.AccessLevelListEn.Count" asp-for="AccessLevel" asp-items="@Model.AccessLevelListEn"></select>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="PictureTime" class="col-lg-3 col-sm-3 control-label">Picture Date and Time</label>
                <div class="col-lg-4">
                    <div class="input-group date">
                        <input style="width: 300px;" id="datetimepicker1" data-format="dd-MMM-yyyy HH:mm:ss" type="text"
                               class="form-control" data-zdp_readonly_element="false" asp-for="PictureTime"
                               value="@Model.PictureTime?.ToString("dd-MMM-yyyy HH:mm:ss")" />
                    </div>
                </div>
            </div>
            <script type="text/javascript">
                $(function () {
                    $('#datetimepicker1').Zebra_DatePicker({
                        format: 'd-M-Y H:i:s',
                        open_icon_only: true
                    });
                });
            </script>
            <div class="form-group">
                <label class="col-lg-3 col-sm-2 control-label">Location</label>
                <div class="col-lg-10 col-md-10 col-sm-10">
                    <input id="location" type="text" asp-for="Location" value="@Model.Location" class="form-control" style="width: 100%; background: #e8fdd0" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 col-sm-2 control-label">Latitude</label>
                <div class="col-lg-10 col-md-10 col-sm-10">
                    <input id="latitude" type="text" asp-for="Latitude" value="@Model.Latitude" class="form-control" style="width: 100%; background: #e8fdd0" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 col-sm-2 control-label">Longitude</label>
                <div class="col-lg-10 col-md-10 col-sm-10">
                    <input id="longitude" type="text" asp-for="Longtitude" value="@Model.Longtitude" class="form-control" style="width: 100%; background: #e8fdd0" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 col-sm-2 control-label">Altitude</label>
                <div class="col-lg-10 col-md-10 col-sm-10">
                    <input id="altitude" type="text" asp-for="Altitude" value="@Model.Altitude" class="form-control" style="width: 100%; background: #e8fdd0" />
                </div>
            </div>
            @if (Model.LocationsList.Any())
            {
                <div class="form-group">
                    <label class="col-lg-3 col-sm-2 control-label">Copy Location Name, Latitude and Longitude from Existing Location</label>
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <div class="row">
                            <div class="col-lg-6 col-md-9 col-sm-8">
                                <select id="copyLocation" class="selectpicker form-control-noline" data-style="btn-kinaunaselect" asp-items="@Model.LocationsList"></select>
                            </div>
                            <div class="col-lg-4 col-md-3 col-sm-3">
                                <button id="copyLocationButton" type="button" class="btn btn-primary">Copy</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <br />
            <input asp-for="PictureId" class="form-control" value="@Model.PictureId" type="hidden" />
            <input asp-for="ProgenyId" class="form-control" value="@Model.ProgenyId" type="hidden" />
            <input asp-for="TagFilter" class="form-control" value="@ViewBag.TagFilter" type="hidden" />
            <input asp-for="Author" class="form-control" value="@Model.Author" type="hidden" />
            <div>
                <div class="form-group">
                    <div class="col-lg-3 col-sm-3 control-label"></div>
                    <div class="col-lg-9">
                        <button class="btn btn-success leavePage" type="submit">Save</button>
                        <a class="btn btn-danger leavePage" asp-controller="@ViewContext.RouteData.Values["controller"]" asp-action="@ViewContext.RouteData.Values["action"]" asp-route-id="@ViewContext.RouteData.Values["id"]" asp-route-childId="@Model.ProgenyId">Cancel</a>
                    </div>
                </div>
            </div>
        </form>
        <form asp-controller="AddItem" asp-action="DeletePicture" role="form" method="get">
            <div class="form-group">
                <label class="col-lg-3 col-sm-3 control-label">Remove this picture:</label>
                <div class="col-lg-9">
                    <button class="btn btn-danger leavePage" type="submit">Delete Picture</button>
                </div>
            </div>
            <input asp-for="PictureId" class="form-control" value="@Model.PictureId" type="hidden" />
        </form>
    </div>
    <script type="text/javascript">
        $("#toggleEditBtn").click(function () {
            $("#editSection").toggle(500);
        });
        $('#copyLocationButton').click(function copyLocation() {
            let locations = [];
            @{ string myLoc = "";
                                string addLoc = "";}
            @foreach (Location loc in Model.ProgenyLocations)
                            {
                                myLoc = myLoc + "let loc" + loc.LocationId + " = {id: " + loc.LocationId + ", name: \'" + loc.Name + "\', lat: " + loc.Latitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + ", lng: " + loc.Longitude.ToString(new CultureInfo("en-US")).Replace(',', '.') + "};";
                                addLoc = addLoc + "locations.push(loc" + loc.LocationId + ");";
                            }
            @Html.Raw(myLoc)
            @Html.Raw(addLoc)
            let locId = Number($('#copyLocation').val());
            let selectedLoc = locations.find(obj => { return obj.id === locId });
            $('#latitude').val(selectedLoc.lat);
            $('#longitude').val(selectedLoc.lng);
            $('#location').val(selectedLoc.name);
        });
    </script>
}
else
{
    @section Scripts{
        <script src="https://js.api.here.com/v3/3.0/mapsjs-core.js" type="text/javascript" charset="utf-8"></script>
        <script src="https://js.api.here.com/v3/3.0/mapsjs-service.js" type="text/javascript" charset="utf-8"></script>
        <script src="https://js.api.here.com/v3/3.0/mapsjs-ui.js" type="text/javascript" charset="utf-8"></script>
        <script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-mapevents.js"></script>
        <link rel="stylesheet" type="text/css" href="https://js.api.here.com/v3/3.0/mapsjs-ui.css" />
    }
}
<br />
<div style="max-width: 100%; padding-top: 10px; padding-bottom: 20px;">
    <div style="float: left">
        <a class="leavePage" asp-controller="Pictures" asp-action="Picture" asp-route-id="@Model.PrevPicture" asp-route-childId="@Model.Progeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@Model.TagFilter"><i class="fa fa-arrow-left" aria-hidden="true"></i> @viewPrevText Photo</a>
    </div>
    <div style="float: right">
        <a class="leavePage" asp-controller="Pictures" asp-action="Picture" asp-route-id="@Model.NextPicture" asp-route-childId="@Model.Progeny.Id" asp-route-sortBy="@Model.SortBy" asp-route-tagFilter="@Model.TagFilter">@viewNextText Photo <i class="fa fa-arrow-right" aria-hidden="true"></i></a>
    </div>
</div>
@*<script>
        var myElement = document.querySelector('#photoDiv');
        myElement.addEventListener("touchstart", startTouch, false);
        myElement.addEventListener("touchmove", moveTouch, false);

        // Swipe Up / Down / Left / Right
        var initialX = null;
        var initialY = null;

        function startTouch(e) {
            initialX = e.touches[0].clientX;
            initialY = e.touches[0].clientY;
        };

        function moveTouch(e) {
            if (initialX === null) {
                return;
            }

            if (initialY === null) {
                return;
            }

            var currentX = e.touches[0].clientX;
            var currentY = e.touches[0].clientY;

            var diffX = initialX - currentX;
            var diffY = initialY - currentY;

            if (Math.abs(diffX) > Math.abs(diffY)) {
                // sliding horizontally
                if (diffX > 0) {
                    // swiped left
                    console.log("swiped left");
                    document.getElementById('nextPhotoLink').click();
                } else {
                    // swiped right
                    console.log("swiped right");
                    document.getElementById('previousPhotoLink').click();
                }
            } else {
                // sliding vertically
                if (diffY > 0) {
                    // swiped up
                    console.log("swiped up");
                } else {
                    // swiped down
                    console.log("swiped down");
                }
            }

            initialX = null;
            initialY = null;

            e.preventDefault();
        };
    </script>*@