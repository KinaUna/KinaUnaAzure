@using System.Globalization
@model KinaUnaWeb.Models.ItemViewModels.MeasurementViewModel
@section Scripts{
    <script src="/lib/moment.min.js"></script>
    <script src="/lib/momentLocale/da.js"></script>
    <script src="/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap4.min.js"></script>
    <script src="/lib/datatables/sorting/datetime-moment.js"></script>
}
@{
    ViewData["Title"] = Model.Progeny.NickName + "'s målinger";
}
@if (Model == null)
{
<h3>@ViewData["Title"]</h3>
<div>
    Ingen data.
</div>
}
else
{
    if (Model.IsAdmin)
    {
<div class="btn-group" style="float: right;">
    <a asp-controller="AddItem" asp-action="AddMeasurement" class="btn btn-success btn-round leavePage">
        <i class="fas fa-plus"></i> Tilføj måling
    </a>
</div>
    }
<h3 class="title">@ViewData["Title"]</h3>
<div class="table-responsive">
    <table class="table table-bordered table-striped" style="margin-top: 15px;">
        <thead>
            <tr>
                <th style="font-weight: bold">Dato</th>
                <th style="font-weight: bold">Højde</th>
                <th style="font-weight: bold">Vægt</th>
                <th style="font-weight: bold">Hoved-omkreds</th>
                <th style="font-weight: bold">Øjenfarve</th>
                <th style="font-weight: bold">Hårfarve</th>
                @if (Model.IsAdmin)
                {
                    <th style="font-weight: bold">Handling</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var measurementItem in Model.MeasurementsList)
                {
            <tr>
                <td style="min-width: 100px;">@measurementItem.Date.ToString("dd-MMM-yyyy")</td>
                <td>@measurementItem.Height</td>
                <td>@measurementItem.Weight</td>
                <td>@measurementItem.Circumference</td>
                <td>@measurementItem.EyeColor</td>
                <td>@measurementItem.HairColor</td>
                @if (Model.IsAdmin)
                        {
                <td>
                    <div>
                        <a asp-controller="AddItem" asp-action="EditMeasurement" asp-route-itemId="@measurementItem.MeasurementId" class="btn btn-info btn-round btn-sm leavePage">
                            <i class="fas fa-pencil-alt"></i>
                        </a>
                        <a asp-controller="AddItem" asp-action="DeleteMeasurement" asp-route-itemId="@measurementItem.MeasurementId" class="btn btn-danger btn-round btn-sm leavePage">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    </div>
                </td>
                        }
            </tr>
                }
        </tbody>
    </table>
</div>
<canvas id="chartContainer" style="clear: both; height: 380px;"></canvas>
<br />
<canvas id="chartContainer2" style="clear: both; height: 380px;"></canvas>
<script src="~/lib/chart.js/dist/Chart.js"></script>
<script type="text/javascript">
        var ctx = document.getElementById("chartContainer");
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [{
                    label: 'Højde',
                    data: [@foreach (var heightItem in Model.MeasurementsList)
                                {
                                    if (heightItem.Height > 0.0)
                                    {
                                        string chartYear = heightItem.Date.Year.ToString();
                                        string chartMonth = (heightItem.Date.Month - 1).ToString();
                                        string chartDay = heightItem.Date.Day.ToString();
                                        @Html.Raw("{ t: new Date(" + chartYear + ", " + chartMonth + ", " + chartDay + "), y: " + heightItem.Height.ToString(CultureInfo.InvariantCulture).Replace(',', '.') + "},")
                                    }
                                }],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    xAxes: [{
                        type: 'time',
                        time: {
                            displayFormats: {
                                quarter: 'MMM YYYY'
                            }
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero:false
                        }
                    }]
                }
            }
        });

        var ctx2 = document.getElementById("chartContainer2");
        var myChart2 = new Chart(ctx2, {
            type: 'line',
            data: {

                datasets: [{
                    label: 'Vægt',
                    data: [@foreach (var weightItem in Model.MeasurementsList)
                                {
                                    if (weightItem.Weight > 0.0)
                                    {
                                        string chartYear = weightItem.Date.Year.ToString();
                                        string chartMonth = (weightItem.Date.Month - 1).ToString();
                                        string chartDay = weightItem.Date.Day.ToString();
                                        @Html.Raw("{ x: new Date(" + chartYear + ", " + chartMonth + ", " + chartDay + "), y: " + weightItem.Weight.ToString(CultureInfo.InvariantCulture).Replace(',', '.') + "},")
                                    }
                                }],
                    borderColor: 'rgb(75, 192, 192)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    xAxes: [{
                        type: 'time',
                        time: {
                            displayFormats: {
                                quarter: 'MMM YYYY'
                            }
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero:false
                        }
                    }]
                }
            }
        });
</script>
}