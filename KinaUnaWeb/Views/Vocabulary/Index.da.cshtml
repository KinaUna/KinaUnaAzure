@using KinaUnaWeb.Models.ItemViewModels
@model List<KinaUnaWeb.Models.ItemViewModels.VocabularyItemViewModel>
@section Scripts{
    <link href="/lib/datatables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <script src="/lib/moment.min.js"></script>
    <script src="/lib/momentLocale/da.js"></script>
    <script src="/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap4.min.js"></script>
    <script src="/lib/datatables/sorting/datetime-moment.js"></script>
}
@{
    ViewData["Title"] = Model[0].Progeny.NickName + "'s ord";
}
@if (Model == null)
{
<h3>@ViewData["Title"]</h3>
<div>
    Ingen data.
</div>
}
else
{
<div class="container">
    @if (Model[0].IsAdmin)
        {
    <div class="btn-group" style="float: right;">
        <a asp-controller="AddItem" asp-action="AddVocabulary" class="btn btn-success btn-round leavePage">
            <i class="fas fa-plus"></i> Tilføj ord
        </a>
    </div>
        }
    <h3 class="title">@ViewData["Title"]</h3>
</div>
<div class="table-responsive">
    <table id="wordList" class="table table-bordered table-striped" style="border-spacing: 0;">
        <thead>
            <tr>
                <th style="font-weight: bold">Ord</th>
                <th style="font-weight: bold">Lyder som</th>
                <th style="font-weight: bold">Beskrivelse</th>
                <th style="font-weight: bold">Sprog</th>
                <th style="font-weight: bold">Dato</th>
                @if (Model[0].IsAdmin)
                {
                <th style="font-weight: bold">Handling</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var wordItem in Model)
                {
            <tr>
                <td style="min-width: 135px">@wordItem.Word</td>
                <td style="min-width: 135px">@wordItem.SoundsLike</td>
                <td style="min-width: 135px">@wordItem.Description</td>
                <td>@wordItem.Language</td>
                @if (wordItem.Date != null)
                        {
                <td style="min-width: 100px">@wordItem.Date.Value.ToString("dd-MMM-yyyy")</td>
                        }
                        else
                        {
                <td></td>
                        }
                @if (Model[0].IsAdmin)
                        {
                <td style="min-width: 135px">
                    <div>
                        <a asp-controller="AddItem" asp-action="EditVocabulary" asp-route-itemId="@wordItem.WordId" class="btn btn-info btn-round btn-sm leavePage">
                            <i class="fas fa-pencil-alt"></i>
                        </a>
                        <a asp-controller="AddItem" asp-action="DeleteVocabulary" asp-route-itemId="@wordItem.WordId" class="btn btn-danger btn-round btn-sm leavePage">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    </div>
                </td>
                        }
            </tr>
                }
        </tbody>
    </table>
</div>
<div id="chartDiv">
    <canvas id="chartContainer" style="clear: both; height: 380px;"></canvas>
</div>
<script src="~/lib/chart.js/dist/Chart.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.fn.dataTable.moment('DD-MMM-YYYY', 'da');
        $("#wordList").DataTable({
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.10.16/i18n/Danish.json"
            },
            "scrollX": false,
            "order": [[4, "desc"]]
        });
    })
</script>
<script type="text/javascript">
        var ctx = document.getElementById("chartContainer");
            var myChart = new Chart(ctx,
                {
                    type: 'line',
                    data: {
                        datasets: [
                            {
                                label: 'Ord',
                                data: [@foreach (WordDateCount wordItem in ViewBag.ChartData)
                                       {
                                           if (wordItem.WordCount > 0)
                                           {
                                               string chartYear = wordItem.WordDate.Year.ToString();
                                               string chartMonth = (wordItem.WordDate.Month - 1).ToString();
                                               string chartDay = wordItem.WordDate.Day.ToString();
                                               @Html.Raw("{ t: new Date(" + chartYear + ", " + chartMonth + ", " + chartDay + "), y: " + wordItem.WordCount + "},")
                                           }
                                       }],
                                borderColor: 'rgb(75, 192, 192)',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        scales: {
                            xAxes: [
                                {
                                    type: 'time',
                                    time: {
                                        tooltipFormat: 'dd DD MMM YYYY',
                                        displayFormats: {
                                            quarter: 'MMM YYYY'
                                        }
                                    }
                                }
                            ],
                            yAxes: [
                                {
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Antal ord'
                                    },
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }
                            ]
                        }
                    }
                });
</script>
}