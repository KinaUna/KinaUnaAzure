@using System.Text.RegularExpressions
@using KinaUnaWeb.Services
@using KinaUna.Data
@using KinaUna.Data.Extensions
@model KinaUnaWeb.Models.ItemViewModels.CalendarItemViewModel
@inject ILocaleManager LocaleManager
@{
    int languageId = LocaleManager.GetLanguageId(Context.Request);
    string title = Model.CurrentProgeny.NickName + " : " + await LocaleManager.GetTranslation("Events", PageNames.Calendar, Model.LanguageId);
    Model.CalendarItem.StartTime ??= DateTime.MinValue;
    Model.CalendarItem.EndTime ??= DateTime.MinValue;
    string startDateString = Model.CalendarItem.StartTime.Value.ToString("dd MMM yyyy");
    if (Model.CalendarItem.AllDay && Model.CalendarItem.StartTime.Value.Date != Model.CalendarItem.EndTime.Value.Date)
    {
        if (Model.CalendarItem.StartTime.Value.Year == Model.CalendarItem.EndTime.Value.Year)
        {
            startDateString = Model.CalendarItem.StartTime.Value.ToString("dd MMM");
            if (Model.CalendarItem.StartTime.Value.Month == Model.CalendarItem.EndTime.Value.Month)
            {
                startDateString = Model.CalendarItem.StartTime.Value.ToString("dd");
            }
        }
    }
    string startTimeString = Model.CalendarItem.StartTime.Value.ToString("HH:mm");
    string endDateString = Model.CalendarItem.EndTime.Value.ToString("dd MMM yyyy");
    string endTimeString = Model.CalendarItem.EndTime.Value.ToString("HH:mm");

    if (Model.CalendarItem.StartTime.Value.Date == Model.CalendarItem.EndTime.Value.Date)
    {
        endDateString = string.Empty;
    }
}
<div class="ml-auto mr-auto mt-auto mb-auto item-details-content-wrapper">
    <div class="timeline-card-body bg-calendar item-details-content">
        <div class="row sticky-top m-0 item-details-header">
            <div class="col-12 bg-calendar-header">
                <img src="@Model.CalendarItem.Progeny.GetProfilePictureUrl()" class="item-details-title-picture"/>
                <span class="h4 mr-3 align-bottom">@title</span>
                <button type="button" class="btn btn-link item-details-close-button"><span>×</span></button>
            </div>
        </div>
        <div class="row m-0">
            <div class="col-12">
                <div class="space-20">
                </div>
            </div>
            <div class="col-auto">
                @if (Model.CalendarItem.RecurrenceRuleId == 0)
                {
                    <span class="timeline-icon"><i class="material-icons" style="font-size: 48px;">event_note</i></span>
                }
                else
                {
                    <span class="timeline-icon"><i class="material-icons" style="font-size: 48px;">event_repeat</i></span>
                }
                
            </div>
            <div class="col">
                @if (Model.CurrentUser.CanUserAddItems)
                {
                    <button class="btn btn-link p-3 text-white-50 float-right copy-item-button" data-copy-item-item-id="@Model.CalendarItem.EventId" data-copy-item-type="calendar">
                        <i class="material-icons kinauna-icon-medium">content_copy</i>
                    </button>
                }
                <div class="row text-white h5">
                    @if (Model.CalendarItem.AllDay)
                    {
                        if (string.IsNullOrEmpty(endDateString))
                        {
                            <div class="col-auto font-weight-bold pt-2 pl-0">@startDateString</div>
                        }
                        else
                        {
                            <div class="col-auto pt-2 pl-0"><span class="font-weight-bold">@startDateString</span> - <span class="font-weight-bold">@endDateString</span></div>
                        }
                    }
                    else
                    {
                        if (Model.CalendarItem.StartTime.Value.Date == Model.CalendarItem.EndTime.Value.Date)
                        {
                            <div class="col-auto font-weight-bold pt-2 pl-0">@startDateString</div>
                            <div class="col-auto font-weight-normal pt-2 pl-0">@startTimeString - @endTimeString</div>
                        }
                        else
                        {
                            <div class="col-auto">
                                <div class="row">
                                    <div class="col font-weight-bold pt-2 pl-0">@startDateString</div>
                                </div>
                                <div class="row">
                                    <div class="col font-weight-normal text-right pl-0">@startTimeString</div>
                                </div>
                            </div>
                            <div class="col-auto">
                                <div class="row">
                                    <div class="col font-weight-bold pt-2 pl-0">@endDateString</div>
                                </div>
                                <div class="row">
                                    <div class="col font-weight-normal pl-0">@endTimeString</div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="row m-0">
            <div class="col-auto d-none d-md-block">
                <span class="timeline-icon"><i class="material-icons" style="font-size: 48px; opacity: 0">fact_check</i></span>
            </div>
            <div class="col">
                <div class="timeline-title row">
                    <div class="col-12 h4">
                        <div class="space-20"></div>
                        @Model.CalendarItem.Title
                    </div>
                </div>
                <div class="timeline-text row text-white-75">
                    @if (!string.IsNullOrEmpty(Model.CalendarItem.Location))
                    {
                        <div class="col-12 calendar-event-popup-label">
                            <div class="space-20"></div>
                            <i class="material-icons" style="font-size: 18px;">location_on</i> @Model.CalendarItem.Location
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.CalendarItem.Notes))
                    {
                        <div class="col-12">
                            <div class="space-20"></div>
                            <div class="calendar-event-popup-label">
                                <i class="material-icons" style="font-size: 18px;">note</i> @await LocaleManager.GetTranslation("Notes:", PageNames.Calendar, languageId)
                            </div>
                            <div class="space-10"></div>
                            @{
                                string notesWithBrTags = Regex.Replace(Model.CalendarItem.Notes, @"\r\n?|\n", "<br />");
                            }
                            <div>@Html.Raw(notesWithBrTags)</div>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.CalendarItem.Context))
                    {
                        List<string> contextsList = Model.CalendarItem.Context.Split(',').ToList();
                        <div class="col-12 mt-2 text-right">
                            @foreach (string contextString in contextsList)
                            {
                                <span class="btn context-item tag-item-sm">@contextString</span>
                            }
                        </div>
                    }
                    @if (Model.CalendarItem.StartTime.Value > TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, TimeZoneInfo.FindSystemTimeZoneById(Model.CurrentUser.Timezone)))
                    {
                        await Html.RenderPartialAsync("_CalendarRemindersPartial", Model);
                    }
                </div>
            </div>
        </div>
        <div class="row m-0">    
            @if (Model.IsCurrentUserProgenyAdmin)
            {
                
                <div class="col-12">
                    <div class="space-20"></div>
                    <a data-edit-item-type="calendar" data-edit-item-item-id="@Model.CalendarItem.EventId" class="btn btn-info item-details-edit-button edit-item-button"><i class="fas fa-pencil-alt"></i></a>
                    <a asp-controller="Calendar" asp-action="DeleteEvent" asp-route-itemId="@Model.CalendarItem.EventId" class="btn btn-danger item-details-delete-button float-right"><i class="fas fa-trash-alt"></i></a>
                </div>
            }
        </div>
    </div>
</div>