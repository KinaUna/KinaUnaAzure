@using System.Globalization
@using KinaUnaWeb.Services
@using KinaUna.Data
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model KinaUnaWeb.Models.FamilyViewModels.FamilyViewModel
@inject ILocaleManager LocaleManager
@{
    ViewData["Title"] = await LocaleManager.GetTranslation("My family", PageNames.Family, Model.LanguageId);
    string timeSeparator = CultureInfo.CurrentUICulture.DateTimeFormat.TimeSeparator;
    string zebraDateTimeFormat = "d-F-Y H" + timeSeparator + "i";
}
<div id="current-moment-locale-div" class="d-none" data-current-locale="@Model.LanguageIdString"></div>
<div id="zebra-date-time-format-div" class="d-none" data-zebra-date-time-format="@zebraDateTimeFormat"></div>
<div class="ml-xl-auto mr-xl-auto col-xxl-11 col-xxxl-10">
    <h2>@ViewData["Title"]</h2>
    <br />
    <div class="card card-blog card-plain">
        <div class="card-header card-header-warning title">@await LocaleManager.GetTranslation("My family members", PageNames.Family, Model.LanguageId)</div>
        <div class="card-text">
            <div class="btn-group">
                <a class="btn btn-success btn-rounded add-item-button" data-add-item-type="progeny">
                    <i class="fas fa-plus"></i> @await LocaleManager.GetTranslation("Add person or pet", PageNames.Family, Model.LanguageId)
                </a>
            </div>
        </div>
    </div>
    @if (Model.Family.Children != null && Model.Family.Children.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                <tr>
                    <th><strong>@await LocaleManager.GetTranslation("Display name", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Name", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Birthday", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Administrators", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Data", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Action", PageNames.Family, Model.LanguageId)</strong></th>
                </tr>
                </thead>

                <tbody>
                @{
                    List<string> myFamilyProgenyList = new List<string>();
                }
                @foreach (Progeny progeny in Model.Family.Children)
                {
                    if (!myFamilyProgenyList.Contains(progeny.Id.ToString()))
                    {
                        <tr>
                            <td>@progeny.NickName</td>
                            <td>@progeny.Name</td>
                            <td>
                                @if (progeny.BirthDay != null)
                                {
                                    @progeny.BirthDay.Value.ToString("dd-MMM-yyyy HH:mm")
                                }
                            </td>
                            <td>@progeny.Admins</td>
                            <td style="min-width: 100px;">
                                <a asp-controller="MyData" asp-action="ChildSpreadSheet" asp-route-progenyId="@progeny.Id" class="btn btn-primary btn-sm">
                                    @await LocaleManager.GetTranslation("Download spreadsheet", PageNames.Family, Model.LanguageId)
                                    <i class="fas fa-archive"></i>
                                </a>
                            </td>
                            <td>
                                <a data-progeny-info-id="@progeny.Id" class="btn btn-info">
                                    <i class="fas fa-pencil-alt"></i> @await LocaleManager.GetTranslation("More info", PageNames.Family, Model.LanguageId)
                                </a>
                            </td>
                            @* <td>
                                <a data-edit-item-type="progeny" data-edit-item-item-id="@progeny.Id" class="btn btn-info edit-item-button">
                                    <i class="fas fa-pencil-alt"></i> @await LocaleManager.GetTranslation("Edit", PageNames.AddItem, Model.LanguageId)
                                </a>
                                <a asp-controller="Progeny" asp-action="DeleteProgeny" asp-route-progenyId="@progeny.Id.ToString()" class="btn btn-danger leave-page">
                                    <i class="fas fa-trash-alt"></i> @await LocaleManager.GetTranslation("Delete", PageNames.AddItem, Model.LanguageId)
                                </a>

                            </td> *@
                        </tr>
                        myFamilyProgenyList.Add(progeny.Id.ToString());
                    }
                }
                </tbody>
            </table>
        </div>

        <br />
        <div class="card card-blog card-plain">
            <div class="card-header card-header-warning title">@await LocaleManager.GetTranslation("Access list", PageNames.Family, Model.LanguageId)</div>
            <div class="card-text">
                @{
                    List<string> accessListProgenies = new List<string>();
                }
                @foreach (Progeny progeny in Model.Family.Children)
                {
                    if (!accessListProgenies.Contains(progeny.Id.ToString()))
                    {
                        <div class="btn-group">
                            <a class="btn btn-success btn-rounded add-item-button" data-add-item-type="user" data-add-item-progeny-id="@progeny.Id">
                                <i class="fas fa-plus"></i> @await LocaleManager.GetTranslation("Add user for", PageNames.Family, Model.LanguageId) @progeny.Name
                            </a>
                        </div>
                        accessListProgenies.Add(progeny.Id.ToString());
                    }
                }
            </div>
        </div>
    }
    @if (Model.Family.AccessList.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                <tr>
                    <th><strong>@await LocaleManager.GetTranslation("Child", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("User name", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Full name", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Email", PageNames.Family, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Access level", PageNames.AccessManagement, Model.LanguageId)</strong></th>
                    <th><strong>@await LocaleManager.GetTranslation("Edit child access", PageNames.Family, Model.LanguageId)</strong></th>
                </tr>
                </thead>
                <tbody>
                @foreach (UserAccess item in Model.Family.AccessList)
                {
                    <tr>
                        <td>@item.Progeny.NickName</td>
                        <td>@item.User.UserName</td>
                        <td>@item.User.FirstName @item.User.MiddleName @item.User.LastName</td>
                        <td>@item.UserId</td>
                        <td>@Model.Family.AccessLevelList.AccessLevelListEn[item.AccessLevel].Text</td>
                        <td>
                            <a data-edit-item-type="user" data-edit-item-item-id="@item.AccessId" class="btn btn-info edit-item-button">
                                <i class="fas fa-pencil-alt"></i> @await LocaleManager.GetTranslation("Edit", PageNames.AddItem, Model.LanguageId)
                            </a>
                            <a data-delete-item-type="user" data-delete-item-item-id="@item.AccessId" class="btn btn-danger delete-item-button">
                                <i class="fas fa-trash-alt"></i> @await LocaleManager.GetTranslation("Delete", PageNames.AddItem, Model.LanguageId)
                            </a>

                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
</div>
<script src="/js/family/family-index.js" type="module" asp-append-version="true"></script>