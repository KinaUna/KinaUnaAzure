@using KinaUnaWebBlazor.Services
@using KinaUna.Data
@inject ILocaleManager LocaleManager
@inject NavigationManager NavigationManager
@inject UserStateService UserStateService
<Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Light"
     ThemeContrast="ThemeContrast.Light" Class="kinauna_navbar_bg">    
    <Container>
        <BarBrand Margin="Margin.Is5.FromStart.FromEnd">
            <img src="/images/Square44x44Logo.scale-100.png" class="kinauna-logo"/>
        </BarBrand>
        <BarToggler Style="background: #fbd10d; border-radius: 20px;" />
        <BarMenu>
            <Div Margin="Margin.Is5.FromStart" Display="Display.None.InlineBlock.OnDesktop"></Div>
            <Div Margin="Margin.Is4.FromTop" Display="Display.Block.OnMobile.None.OnDesktop"></Div>
            <BarStart>
                <BarItem>
                    <BarLink To="/"><Span Class="kinauna_yellow_text">Home</Span></BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="/timeline"><Span Class="kinauna_yellow_text">@_timeLineText</Span></BarLink>
                </BarItem>
            </BarStart>
            <BarEnd>
                <AuthorizeView>
                        <Authorized>
                            <BarItem>
                            <BarDropdown>
                                    <BarDropdownToggle Class="kinauna_yellow_text">@_userName</BarDropdownToggle>
                                    <BarDropdownMenu>
                                        <BarDropdownItem>My Account</BarDropdownItem>
                                        <BarDropdownDivider/>
                                        <BarDropdownItem Clicked="GoToLogOut">@_logOutText</BarDropdownItem>
                                    </BarDropdownMenu>
                                </BarDropdown>
                            </BarItem>
                        </Authorized>
                        <NotAuthorized>
                            <BarItem>
                                <Button Color="Color.Secondary" @onclick="GoToLogIn">@_logInText</Button>
                            </BarItem>
                        </NotAuthorized>
                    </AuthorizeView>
            </BarEnd>
        </BarMenu>
    </Container>
</Bar>
@code
{
    private string _userName = "";
    private string _timeLineText = "Timeline";
    private string _logInText = "Log in";
    private string _logOutText = "Log out";

    private void GoToLogIn(){
        string returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        NavigationManager.NavigateTo($"LogIn?redirectUri={returnUrl}", forceLoad: true);
    }

    private void GoToLogOut()
    {
        NavigationManager.NavigateTo("LogOut", forceLoad: true);
    }
    protected override async Task OnParametersSetAsync()
    {
        _timeLineText = await UserStateService.GetTranslation("Timeline", PageNames.Layout);
        _logInText = await UserStateService.GetTranslation("Log in or register", PageNames.Layout);
        _logOutText = await UserStateService.GetTranslation("Log out", PageNames.Layout);

        if(UserStateService.CurrentUser != null){
            
            _userName = UserStateService.CurrentUser.UserName;
        }

    }
}
