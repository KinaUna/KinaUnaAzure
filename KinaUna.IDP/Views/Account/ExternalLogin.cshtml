@using KinaUna.Data
@using KinaUna.IDP.Models.AccountViewModels
@using KinaUna.IDP.Services
@model ExternalLoginViewModel
@inject ILocaleManager LocaleManager
@{
    int languageId = LocaleManager.GetLanguageId(Context.Request);
    ViewData["Title"] = await LocaleManager.GetTranslation("Register", PageNames.Account, languageId);
}

<h2>@ViewData["Title"]</h2>
<h4>@await LocaleManager.GetTranslation("Associate your KinaUna account.", PageNames.Account, languageId)</h4>
<hr />

<p class="text-info">
    @await LocaleManager.GetTranslation("You've successfully authenticated with", PageNames.Account, languageId) <strong>@ViewData["LoginProvider"]</strong>.
    @await LocaleManager.GetTranslation("Please enter an email address for this site below and click the Register button to finish", PageNames.Account, languageId)
    logging in.
</p>

<div class="row">
    <div class="col-md-4">
        <form asp-action="ExternalLoginConfirmation" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email">@await LocaleManager.GetTranslation("Email", PageNames.Account, languageId)</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-default leavePage">@ViewData["Title"]</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
